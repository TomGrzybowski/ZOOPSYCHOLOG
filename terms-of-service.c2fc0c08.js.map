{"mappings":"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","sources":["node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/global.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/compat.ts","node_modules/process/browser.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n * @public\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.17.2\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function A(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const I = \"ok\", T = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", D = \"already-exists\", N = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class Q {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Z {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass J {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new J(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass X {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === X.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof X ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends X {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends X {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return I;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    A(t, e, n, r, s) {\n        const i = this.I(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.T(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.A(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst yt = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */ class gt {\n    /**\n     * @internal\n     * @param alias Un-escaped alias representation\n     */\n    constructor(t) {\n        this.alias = t;\n    }\n    /**\n     * Returns true if the string could be used as an alias.\n     */    static D(t) {\n        return yt.test(t);\n    }\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */    canonicalString() {\n        let t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n        return gt.D(t) || (t = \"`\" + t + \"`\"), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class _t {\n    constructor(t, e, n) {\n        this.alias = t, this.N = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function vt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bt {\n    static F() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = vt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction Et(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function At(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Rt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Pt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                throw t instanceof DOMException ? new Rt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Pt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Pt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return Et(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nPt.EMPTY_BYTE_STRING = new Pt(\"\");\n\nconst Vt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Vt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Dt(t.seconds),\n        nanos: Dt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Dt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Nt(t) {\n    return \"string\" == typeof t ? Pt.fromBase64String(t) : Pt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Ft {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Ft.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Ft.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Ft(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? Et(this.nanoseconds, t.nanoseconds) : Et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function xt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function St(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return xt(e) ? St(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function qt(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Ft(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ot = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction kt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? xt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ct(t, e) {\n    if (t === e) return !0;\n    const n = kt(t);\n    if (n !== kt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return qt(t).isEqual(qt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Nt(t.bytesValue).isEqual(Nt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Dt(t.doubleValue), r = Dt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return At(t.arrayValue.values || [], e.arrayValue.values || [], Ct);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ct(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Lt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ct(t, e)));\n}\n\nfunction Mt(t, e) {\n    if (t === e) return 0;\n    const n = kt(t), r = kt(e);\n    if (n !== r) return Et(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return Et(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Dt(t.integerValue || t.doubleValue), r = Dt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Ut(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ut(qt(t), qt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return Et(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Nt(t), r = Nt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = Et(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = Et(Dt(t.latitude), Dt(e.latitude));\n            if (0 !== n) return n;\n            return Et(Dt(t.longitude), Dt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Mt(n[t], r[t]);\n                if (e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ot && e === Ot) return 0;\n            if (t === Ot) return 1;\n            if (e === Ot) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = Et(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Mt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return Et(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Ut(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return Et(t, e);\n    const n = $t(t), r = $t(e), s = Et(n.seconds, r.seconds);\n    return 0 !== s ? s : Et(n.nanos, r.nanos);\n}\n\nfunction jt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Bt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function zt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Qt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Wt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Gt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Gt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Gt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Kt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Yt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ct(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ht {}\n\nclass Zt extends Ht {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new te(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* Operator.IN */ === e ? new ie(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Mt(e, this.value)) : null !== e && kt(this.value) === kt(e) && this.matchesComparison(Mt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Jt extends Ht {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.S = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Jt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.S || (this.S = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.S;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.q((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    q(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Xt(t, e) {\n    return t instanceof Zt ? function(t, e) {\n        return e instanceof Zt && t.op === e.op && t.field.isEqual(e.field) && Ct(t.value, e.value);\n    }(t, e) : t instanceof Jt ? function(t, e) {\n        if (e instanceof Jt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Xt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = re(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = re(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Bt(e) && Lt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Lt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Bt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Lt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ce {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ae(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class he {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new he(t);\n    }\n    static min() {\n        return new he(new Ft(0, 0));\n    }\n    static max() {\n        return new he(new Ft(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass le {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || de.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new le(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new le(this.comparator, this.root.remove(t, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new fe(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new fe(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass fe {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass de {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : de.RED, this.left = null != r ? r : de.EMPTY, \n        this.right = null != s ? s : de.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new de(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return de.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return de.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, de.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, de.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nde.EMPTY = null, de.RED = !0, de.BLACK = !1;\n\n// end LLRBEmptyNode\nde.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new de(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass we {\n    constructor(t) {\n        this.comparator = t, this.data = new le(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new me(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new me(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof we)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new we(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass me {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class pe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new pe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new we(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new pe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return At(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ye {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ye({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Wt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Gt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Gt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Wt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ct(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Wt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new ye(Gt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ge {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ge(t, 0 /* DocumentType.INVALID */ , \n        /* version */ he.min(), \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new ge(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ge(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ge(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(he.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = he.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ge && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ge(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass _e {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.O = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function ve(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new _e(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass be {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.k = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.C = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ee(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Ae(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ie(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Te(t) {\n    const e = A(t);\n    if (null === e.k) {\n        e.k = [];\n        const t = Ae(e), n = Ee(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.k.push(new ce(t)), e.k.push(new ce(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.k.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.k.push(new ce(nt.keyField(), t));\n            }\n        }\n    }\n    return e.k;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Re(t) {\n    const e = A(t);\n    if (!e.C) if (\"F\" /* LimitType.First */ === e.limitType) e.C = ve(e.path, e.collectionGroup, Te(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Te(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new ce(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Kt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Kt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.C = ve(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.C;\n}\n\nfunction Pe(t, e) {\n    e.getFirstInequalityField(), Ae(t);\n    const n = t.filters.concat([ e ]);\n    return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ae(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Xt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Yt(t.startAt, e.startAt) && Yt(t.endAt, e.endAt);\n    }(Re(t), Re(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction $e(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.L) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class De {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ne extends De {}\n\n/** Transforms an array value via a union operation. */ class Fe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class xe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Se extends De {\n    constructor(t, e) {\n        super(), this.M = t, this.U = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class qe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Oe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Oe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Oe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Oe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class ke {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ce extends ke {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Le extends ke {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Me extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Ue extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const je = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Be = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), ze = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Qe {\n    constructor(t, e) {\n        this.databaseId = t, this.L = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction We(t, e) {\n    if (t.L) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ge(t, e) {\n    return t.L ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ke(t, e) {\n    return We(t, e.toTimestamp());\n}\n\nfunction Ye(t) {\n    return E(!!t), he.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction He(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ze(t, e) {\n    return He(t.databaseId, e.path);\n}\n\nfunction Je(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(fn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Xe(t, e) {\n    return He(t.databaseId, e);\n}\n\nfunction tn(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction en(t, e, n) {\n    return {\n        name: Ze(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction nn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Je(t, e.found.name), r = Ye(e.found.updateTime), s = e.found.createTime ? Ye(e.found.createTime) : he.min(), i = new ye({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ge.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Je(t, e.missing), r = Ye(e.readTime);\n        return ge.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction rn(t, e) {\n    let n;\n    if (e instanceof Ce) n = {\n        update: en(t, e.key, e.value)\n    }; else if (e instanceof Me) n = {\n        delete: Ze(t, e.key)\n    }; else if (e instanceof Le) n = {\n        update: en(t, e.key, e.data),\n        updateMask: ln(e.fieldMask)\n    }; else {\n        if (!(e instanceof Ue)) return b();\n        n = {\n            verify: Ze(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.U\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction sn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Xe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Xe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return hn(Jt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: an(t.field),\n                direction: on(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.L || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction on(t) {\n    return je[t];\n}\n\n// visible for testing\nfunction un(t) {\n    return Be[t];\n}\n\nfunction cn(t) {\n    return ze[t];\n}\n\nfunction an(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction hn(t) {\n    return t instanceof Zt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: an(t.field),\n                op: un(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Jt ? function(t) {\n        const e = t.getFilters().map((t => hn(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: cn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction ln(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction fn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function dn(t) {\n    return new Qe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass wn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.j = t, this.timerId = e, this.B = n, this.W = r, this.G = s, this.K = 0, this.Y = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.H = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.K = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Z() {\n        this.K = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.K + this.X()), n = Math.max(0, Date.now() - this.H), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.K} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Y = this.j.enqueueAfterDelay(this.timerId, r, (() => (this.H = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.K *= this.W, this.K < this.B && (this.K = this.B), this.K > this.G && (this.K = this.G);\n    }\n    tt() {\n        null !== this.Y && (this.Y.skipDelay(), this.Y = null);\n    }\n    cancel() {\n        null !== this.Y && (this.Y.cancel(), this.Y = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.K;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass mn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.M = r, this.et = !1;\n    }\n    nt() {\n        if (this.et) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    A(t, e, n) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.A(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.et = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function pn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        writes: e.map((t => rn(n.M, t)))\n    };\n    await n.A(\"Commit\", r, s);\n}\n\nasync function yn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        documents: e.map((t => Ze(n.M, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = nn(n.M, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function gn(t, e) {\n    const n = A(t), r = sn(n.M, Re(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Je(t, e.name), s = Ye(e.updateTime), i = e.createTime ? Ye(e.createTime) : he.min(), o = new ye({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = ge.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.M, t.document, void 0)));\n}\n\nasync function _n(t, e, n) {\n    const r = A(t), s = function(t, e, n) {\n        const r = sn(t, e), s = [];\n        return n.forEach((t => {\n            \"count\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n            }) : \"avg\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                    field: an(t.fieldPath)\n                }\n            }) : \"sum\" === t.N && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                    field: an(t.fieldPath)\n                }\n            });\n        })), {\n            structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n            },\n            parent: r.parent\n        };\n    }(r.M, Re(e), n), i = s.parent;\n    r.connection.v || delete s.parent;\n    const o = (await r.P(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        return E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new ye({\n        mapValue: {\n            fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n        }\n    });\n    var u, c;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const vn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction bn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!vn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = dn(t._databaseId), u = function(t, e, n, r) {\n            return new mn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        vn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return vn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass En {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new En({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new En(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = vn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), vn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction In(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Tn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Rn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Rn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, An))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new Q(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Pn(t) {\n    return t = ct(t, An), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Vn {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class $n {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertValue(this._data.value);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Dn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Fn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Dn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Nn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Nn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class Fn extends Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new be(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Dn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._path);\n    }\n}\n\nfunction xn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new Fn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new Fn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Sn(t, e) {\n    if (t = ct(t, An), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Nn(t, \n    /* converter= */ null, function(t) {\n        return new be(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction qn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = bt.F()), st(\"doc\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Dn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Dn(t.firestore, t instanceof Fn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function On(t, e) {\n    return t = l(t), e = l(e), (t instanceof Dn || t instanceof Fn) && (e instanceof Dn || e instanceof Fn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function kn(t, e) {\n    return t = l(t), e = l(e), t instanceof Nn && e instanceof Nn && (t.firestore === e.firestore && Ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Cn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Cn(Pt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Cn(Pt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Ln {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Mn() {\n    return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Un {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class jn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return Et(this._lat, t._lat) || Et(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Bn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class zn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ce(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Wn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Gn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.M = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.rt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get st() {\n        return this.settings.st;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new Gn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.M, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.ct(t), r;\n    }\n    at(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.rt(), r;\n    }\n    ht(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ut: !0\n        });\n    }\n    lt(t) {\n        return dr(t, this.settings.methodName, this.settings.ft || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ct(this.path.get(t));\n    }\n    ct(t) {\n        if (0 === t.length) throw this.lt(\"Document fields must not be empty\");\n        if (Wn(this.st) && Bn.test(t)) throw this.lt('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Kn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.M = n || dn(t);\n    }\n    /** Creates a new top-level parse context. */    wt(t, e, n, r = !1) {\n        return new Gn({\n            st: t,\n            methodName: e,\n            dt: n,\n            path: nt.emptyPath(),\n            ut: !1,\n            ft: r\n        }, this.databaseId, this.M, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Yn(t) {\n    const e = t._freezeSettings(), n = dn(t._databaseId);\n    return new Kn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Hn(t, e, n, r, s, i = {}) {\n    const o = t.wt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    ar(\"Data must be an object, but it was:\", o, r);\n    const u = ur(r, o);\n    let c, a;\n    if (i.merge) c = new pe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = hr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            wr(t, s) || t.push(s);\n        }\n        c = new pe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new zn(new ye(u), c, a);\n}\n\nclass Zn extends Un {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.st) throw 1 /* UserDataSource.Update */ === t.st ? t.lt(`${this._methodName}() can only appear at the top level of your update data`) : t.lt(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Zn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Jn(t, e, n) {\n    return new Gn({\n        st: 3 /* UserDataSource.Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ut: n\n    }, e.databaseId, e.M, e.ignoreUndefinedProperties);\n}\n\nclass Xn extends Un {\n    _toFieldTransform(t) {\n        return new qe(t.path, new Ne);\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\nclass tr extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new Fe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass er extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new xe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass nr extends Un {\n    constructor(t, e) {\n        super(t), this.gt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Se(t.M, $e(t.M, this.gt));\n        return new qe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function rr(t, e, n, r) {\n    const s = t.wt(1 /* UserDataSource.Update */ , e, n);\n    ar(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = ye.empty();\n    Tt(r, ((t, r) => {\n        const u = fr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.at(u);\n        if (r instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = or(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new pe(i);\n    return new Qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function sr(t, e, n, r, s, i) {\n    const o = t.wt(1 /* UserDataSource.Update */ , e, n), u = [ hr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(hr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = ye.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!wr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.at(e);\n        if (n instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = or(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new pe(a);\n    return new Qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ir(t, e, n, r = !1) {\n    return or(n, t.wt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function or(t, e) {\n    if (cr(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return ar(\"Unsupported field value:\", e, t), ur(t, e);\n    if (t instanceof Un) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Wn(e.st)) throw e.lt(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.lt(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ut && 4 /* UserDataSource.ArrayArgument */ !== e.st) throw e.lt(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = or(s, e.ht(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return $e(e.M, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Ft.fromDate(t);\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof Ft) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Ft(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof jn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Cn) return {\n            bytesValue: Ge(e.M, t._byteString)\n        };\n        if (t instanceof Dn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.lt(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: He(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.lt(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ur(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = or(r, e.ot(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction cr(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Ft || t instanceof jn || t instanceof Cn || t instanceof Dn || t instanceof Un);\n}\n\nfunction ar(t, e, n) {\n    if (!cr(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.lt(t + \" a custom object\") : e.lt(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function hr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Ln) return e._internalPath;\n    if (\"string\" == typeof e) return fr(t, e);\n    throw dr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const lr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function fr(t, e, n) {\n    if (e.search(lr) >= 0) throw dr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ln(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw dr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction dr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function wr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class mr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new pr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(_r(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class pr extends mr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class yr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function gr(t, e) {\n    return t = l(t), e = l(e), t instanceof mr && e instanceof mr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof yr && e instanceof yr && (kn(t.query, e.query) && At(t.docs, e.docs, gr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function _r(t, e) {\n    return \"string\" == typeof e ? fr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass vr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class br extends vr {}\n\nfunction Er(t, e, ...n) {\n    let r = [];\n    e instanceof vr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Tr)).length, n = t.filter((t => t instanceof Ar)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Ar extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Ar(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return jr(t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e));\n    }\n    _parse(t) {\n        const e = Yn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Ur(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Mr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Mr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Ur(o, i), \n            u = ir(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Zt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Ir(t, e, n) {\n    const r = e, s = _r(\"where\", t);\n    return Ar._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Tr extends vr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Tr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Jt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) jr(n, t), n = Pe(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Rr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"or\", t))), Tr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Pr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"and\", t))), Tr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Vr extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Vr(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ce(e, n);\n            return function(t, e) {\n                if (null === Ee(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Ae(t);\n                    null !== n && Br(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new be(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function $r(t, e = \"asc\") {\n    const n = e, r = _r(\"orderBy\", t);\n    return Vr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Dr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Dr(t, e, n);\n    }\n    _apply(t) {\n        return new Nn(t.firestore, t.converter, function(t, e, n) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Nr(t) {\n    return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Fr(t) {\n    return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class xr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction qr(...t) {\n    return xr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Or extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Or(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction kr(...t) {\n    return Or._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Cr(...t) {\n    return Or._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Lr(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof mr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Te(t)) if (n.field.isKeyField()) i.push(jt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (xt(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Kt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Yn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Ie(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(jt(e, s));\n                } else {\n                    const t = ir(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Kt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Mr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Ie(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return jt(t, new rt(r));\n    }\n    if (n instanceof Dn) return jt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Ur(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function jr(t, e) {\n    if (e.isInequality()) {\n        const n = Ae(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ee(t);\n        null !== s && Br(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Br(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zr(t, e) {\n    if (!(e instanceof Ar || e instanceof Tr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Qr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Wr extends class {\n    convertValue(t, e = \"none\") {\n        switch (kt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Dt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Nt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new jn(Dt(t.latitude), Dt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = St(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(qt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(fn(n));\n        const r = new J(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Cn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Dn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Gr(t) {\n    const e = bn((t = ct(t, Dn)).firestore), n = new Wr(t.firestore);\n    return yn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new mr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Kr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Nn))._query);\n    const e = bn(t.firestore), n = new Wr(t.firestore);\n    return gn(e, t._query).then((e => {\n        const r = e.map((e => new pr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new yr(t, r);\n    }));\n}\n\nfunction Yr(t, e, n) {\n    const r = Qr((t = ct(t, Dn)).converter, e, n), s = Hn(Yn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return pn(bn(t.firestore), [ s.toMutation(t._key, Oe.none()) ]);\n}\n\nfunction Hr(t, e, n, ...r) {\n    const s = Yn((t = ct(t, Dn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(s, \"updateDoc\", t._key, e, n, r) : rr(s, \"updateDoc\", t._key, e);\n    return pn(bn(t.firestore), [ i.toMutation(t._key, Oe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Zr(t) {\n    return pn(bn((t = ct(t, Dn)).firestore), [ new Me(t._key, Oe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Jr(t, e) {\n    const n = qn(t = ct(t, Fn)), r = Qr(t.converter, e), s = Hn(Yn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return pn(bn(t.firestore), [ s.toMutation(n._key, Oe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Xr(t) {\n    return ts(t, {\n        count: rs()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function ts(t, e) {\n    const n = ct(t.firestore, An), r = bn(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new _t(new gt(e), t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return _n(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Wr(t);\n        return new $n(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction es(t) {\n    return new Vn(\"sum\", hr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function ns(t) {\n    return new Vn(\"avg\", hr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function rs() {\n    return new Vn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function ss(t, e) {\n    var n, r;\n    return t instanceof Vn && e instanceof Vn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function is(t, e) {\n    return kn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function os() {\n    return new Zn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function us() {\n    return new Xn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function cs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new tr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function as(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new er(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function hs(t) {\n    return new nr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class ls {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Yn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Oe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : rr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Oe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = fs(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Me(e._key, Oe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction fs(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ds(t) {\n    const e = bn(t = ct(t, An));\n    return new ls(t, (t => pn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ws {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await yn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Me(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Ue(n, this.precondition(n)));\n        })), await pn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = he.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(he.min()) ? Oe.exists(!1) : Oe.updateTime(e) : Oe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(he.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Oe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Oe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ms = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ps {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this._t = n.maxAttempts, this.vt = new wn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this._t -= 1, this.bt();\n    }\n    bt() {\n        this.vt.J((async () => {\n            const t = new ws(this.datastore), e = this.Et(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.At(t);\n                }))));\n            })).catch((t => {\n                this.At(t);\n            }));\n        }));\n    }\n    Et(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    At(t) {\n        this._t > 0 && this.It(t) ? (this._t -= 1, this.asyncQueue.enqueueAndForget((() => (this.bt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    It(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case T:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case D:\n                  case N:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function ys() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class gs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new gs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _s {\n    constructor() {\n        // The last promise in the queue.\n        this.Tt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Rt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Pt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Vt = [], \n        // visible for testing\n        this.$t = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Dt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Nt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ft = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.vt = new wn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.xt = () => {\n            const t = ys();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.vt.tt();\n        };\n        const t = ys();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.xt);\n    }\n    get isShuttingDown() {\n        return this.Pt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.St(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.qt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Pt) {\n            this.Pt = !0, this.Nt = t || !1;\n            const e = ys();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.xt);\n        }\n    }\n    enqueue(t) {\n        if (this.St(), this.Pt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.qt((() => this.Pt && this.Nt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Rt.push(t), this.Ot())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ot() {\n        if (0 !== this.Rt.length) {\n            try {\n                await this.Rt[0](), this.Rt.shift(), this.vt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Rt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.vt.J((() => this.Ot()));\n        }\n    }\n    qt(t) {\n        const e = this.Tt.then((() => (this.Dt = !0, t().catch((t => {\n            this.$t = t, this.Dt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Dt = !1, t))))));\n        return this.Tt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.St(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ft.indexOf(t) > -1 && (e = 0);\n        const r = gs.createAndSchedule(this, t, e, n, (t => this.kt(t)));\n        return this.Vt.push(r), r;\n    }\n    St() {\n        this.$t && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ct() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Tt, await t;\n        } while (t !== this.Tt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Lt(t) {\n        for (const e of this.Vt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ct().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Vt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Vt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ct();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Ut(t) {\n        this.Ft.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    kt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Vt.indexOf(t);\n        this.Vt.splice(e, 1);\n    }\n}\n\nclass vs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Yn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = fs(t, this._firestore), n = new Wr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new mr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new mr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"Transaction.update\", s._key, e, n, r) : rr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = fs(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function bs(t, e, n) {\n    const r = bn(t = ct(t, An)), s = Object.assign(Object.assign({}, ms), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new ps(new _s, r, s, (n => e(new vs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new An(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new J(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.4\", \"\"), r(\"firestore-lite\", \"3.8.4\", \"__BUILD_TARGET__\");\n\nexport { Vn as AggregateField, $n as AggregateQuerySnapshot, Cn as Bytes, Fn as CollectionReference, Dn as DocumentReference, mr as DocumentSnapshot, Ln as FieldPath, Un as FieldValue, An as Firestore, U as FirestoreError, jn as GeoPoint, Nn as Query, Tr as QueryCompositeFilterConstraint, br as QueryConstraint, pr as QueryDocumentSnapshot, Or as QueryEndAtConstraint, Ar as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, Vr as QueryOrderByConstraint, yr as QuerySnapshot, xr as QueryStartAtConstraint, Ft as Timestamp, vs as Transaction, ls as WriteBatch, Jr as addDoc, ss as aggregateFieldEqual, is as aggregateQuerySnapshotEqual, Pr as and, as as arrayRemove, cs as arrayUnion, ns as average, xn as collection, Sn as collectionGroup, Rn as connectFirestoreEmulator, rs as count, Zr as deleteDoc, os as deleteField, qn as doc, Mn as documentId, Cr as endAt, kr as endBefore, ts as getAggregate, Xr as getCount, Gr as getDoc, Kr as getDocs, Tn as getFirestore, hs as increment, In as initializeFirestore, Nr as limit, Fr as limitToLast, Rr as or, $r as orderBy, Er as query, kn as queryEqual, On as refEqual, bs as runTransaction, us as serverTimestamp, Yr as setDoc, p as setLogLevel, gr as snapshotEqual, qr as startAfter, Sr as startAt, es as sum, Pn as terminate, Hr as updateDoc, Ir as where, ds as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n"],"names":["$d7defabc17f02990$var$PlatformLoggerServiceImpl","getPlatformInfoString","this","container","getProviders","service","provider","getImmediate","databaseCompatName","$7vF8m","Logger","$d7defabc17f02990$export$9f30fa0c10967f7f","$d7defabc17f02990$var$PLATFORM_LOG_STRING","$d7defabc17f02990$var$name$o","$d7defabc17f02990$export$b4e3c36c855b14b5","Map","$d7defabc17f02990$export$fa5244b94c62d36a","app","component","addComponent","e","$d7defabc17f02990$var$logger","debug","name","$d7defabc17f02990$export$c930050e7bb63965","componentName","$d7defabc17f02990$export$9566bce3835c0f28","has","set","values","$d7defabc17f02990$export$fa0d6da0f5838f50","name1","heartbeatController","getProvider","optional","triggerHeartbeat","$d7defabc17f02990$export$48d18de2ff1c45a5","name2","instanceIdentifier","clearInstance","$d7defabc17f02990$var$ERRORS","$d7defabc17f02990$var$ERROR_FACTORY","$ffjl9","ErrorFactory","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","val","checkDestroyed","_name","options","_options","config","_config","_container","isDeleted","_isDeleted","create","Object","assign","$4a6xH","Component","rawConfig","name4","String","existingApp","get","ComponentContainer","newApp","$d7defabc17f02990$var$FirebaseAppImpl","name5","$d7defabc17f02990$export$c55cfd413944906d","_a","library","libraryKeyOrName","variant","match","version1","versionMismatch","libraryMismatch","warning","push","version","$307d2bd0b522285b$export$16fa2f45be04daa8","mode","instantiationMode","multipleInstances","props","serviceProps","callback","onInstanceCreated","constructor","instanceFactory","type","$307d2bd0b522285b$var$DEFAULT_ENTRY_NAME","$307d2bd0b522285b$export$2881499e37b75b9a","instancesDeferred","normalizedIdentifier","deferred","Deferred","isInitialized","shouldAutoInitialize","promise","normalizeInstanceIdentifier","identifier","Error","$307d2bd0b522285b$var$isComponentEager","getOrInitializeService","instanceDeferred","entries","instance","resolve","delete","instancesOptions","instances","services","Array","from","Promise","all","filter","map","INTERNAL","_delete","opts","isComponentSet","onInit","existingCallbacks","onInitCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","callbacks","$4TNnu","parcelRequire","$b197424204fd80b4$var$stringToByteArray$1","str","out","p","i","length","c","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","encodeByteArray","input","webSafe","isArray","init_","output","byte1","haveByte2","byte2","haveByte3","byte3","outByte1","outByte2","outByte3","outByte4","byteToCharMap","decodeString","bytes","pos","c1","fromCharCode","stringToByteArray","c2","u","c3","join","$b197424204fd80b4$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charAt","byte4","$b197424204fd80b4$export$55ca9d4bee46aeb3","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","ENCODED_VALS","ENCODED_VALS_WEBSAFE","arguments","$b197424204fd80b4$export$4b5284a3025a455","utf8Bytes","$b197424204fd80b4$export$e510a73ee562749","replace","$b197424204fd80b4$export$c62426fdd000a97e","$b197424204fd80b4$export$b3b2de96497acc47","console","error","window","$parcel$global","$b197424204fd80b4$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$b197424204fd80b4$export$212bb2fc580a90a8","$b197424204fd80b4$var$getDefaultsFromGlobal","env","$b197424204fd80b4$var$getDefaultsFromEnvVariable","document","cookie","decoded","JSON","parse","$b197424204fd80b4$var$getDefaultsFromCookie","info","productName","emulatorHosts","_b","$b197424204fd80b4$export$a3febcf1f14a3a0c","host","$b197424204fd80b4$export$9c11895284c8adad","lastIndexOf","separatorIndex","port","parseInt","substring","$b197424204fd80b4$export$3dfb6827a9f89756","$b197424204fd80b4$export$5539a1a3afe87d6","$b197424204fd80b4$export$85f6557964517f1a","wrapCallback","value","reject","catch","$b197424204fd80b4$export$367bf224123348f1","token","projectId","uid","project","iat","sub","user_id","payload","iss","stringify","alg","navigator","$b197424204fd80b4$export$872f8323f01d7ae0","test","$b197424204fd80b4$export$c36915b22ce77c19","chrome","runtime","browser","undefined","id","$b197424204fd80b4$export$7e7b1a9668aaed8","ua","indexOf","indexedDB","$b197424204fd80b4$export$a8a3018f3d187a4d","preExist","DB_CHECK_NAME","request","self","open","onsuccess","result","close","deleteDatabase","onupgradeneeded","onerror","message","code","customData","$b197424204fd80b4$export$dd24e9cd51226c56","prototype","captureStackTrace","$b197424204fd80b4$export$3fa6e1b18a3b2d40","data","template","errors","key","$b197424204fd80b4$var$replaceTemplate","fullMessage","serviceName","fullCode","$b197424204fd80b4$export$dd1bc94b04021eeb","obj","$391299e0893a3dfa$var$cachedSetTimeout","$391299e0893a3dfa$var$cachedClearTimeout","$391299e0893a3dfa$var$process","module","exports","$391299e0893a3dfa$var$defaultSetTimout","$391299e0893a3dfa$var$defaultClearTimeout","$391299e0893a3dfa$var$runTimeout","fun","setTimeout","call","clearTimeout","e1","$391299e0893a3dfa$var$currentQueue","$391299e0893a3dfa$var$queue","$391299e0893a3dfa$var$draining","$391299e0893a3dfa$var$queueIndex","$391299e0893a3dfa$var$cleanUpNextTick","concat","$391299e0893a3dfa$var$drainQueue","timeout","len","run","marker","$391299e0893a3dfa$var$runClearTimeout","$391299e0893a3dfa$var$Item","array","$391299e0893a3dfa$var$noop","nextTick","args","apply","title","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$577b55f579ec2041$var$instances","$577b55f579ec2041$export$243e62d78d3b544d","LogLevel1","$577b55f579ec2041$var$levelStringToEnum","DEBUG","VERBOSE","INFO","ERROR","SILENT","$577b55f579ec2041$var$defaultLogLevel","$577b55f579ec2041$var$ConsoleMethod","WARN","$577b55f579ec2041$var$defaultLogHandler","logType","logLevel","now","Date","toISOString","method","_logLevel","TypeError","logHandler","_logHandler","userLogHandler","_userLogHandler","$ekHjI","$92f73a92431170de$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","w","addEventListener","event","oldVersion","newVersion","transaction","then","db","$92f73a92431170de$var$readMethods","$92f73a92431170de$var$writeMethods","$92f73a92431170de$var$cachedMethods","$92f73a92431170de$var$getMethod","target1","prop","IDBDatabase","targetFuncName","useIndex","isWrite","includes","IDBIndex","IDBObjectStore","async","storeName","tx","target","store","index","shift","done","r","oldTraps","receiver","$a6f488ce4cf7dbe7$var$idbProxyableTypes","$a6f488ce4cf7dbe7$var$cursorAdvanceMethods","$a6f488ce4cf7dbe7$var$cursorRequestMap","WeakMap","$a6f488ce4cf7dbe7$var$transactionDoneMap","$a6f488ce4cf7dbe7$var$transactionStoreNamesMap","$a6f488ce4cf7dbe7$var$transformCache","$a6f488ce4cf7dbe7$export$407448d2b89b1813","$a6f488ce4cf7dbe7$var$idbProxyTraps","IDBTransaction","objectStoreNames","objectStore","$a6f488ce4cf7dbe7$export$efccba1c4a2ef57b","$a6f488ce4cf7dbe7$export$43caf9889c228507","$a6f488ce4cf7dbe7$var$wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","$a6f488ce4cf7dbe7$export$3b14a55fb2447963","storeNames","sort","$a6f488ce4cf7dbe7$var$transformCachableValue","unlisten","removeEventListener","complete","DOMException","$a6f488ce4cf7dbe7$var$cacheDonePromiseForTransaction","object","some","Proxy","IDBRequest","success","$a6f488ce4cf7dbe7$var$promisifyRequest","newValue","$135e783d297c6b1e$var$d","isAuthenticated","toKey","isEqual","t","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$135e783d297c6b1e$var$w","$135e783d297c6b1e$var$m","o","$135e783d297c6b1e$var$y","n","$135e783d297c6b1e$var$v","$135e783d297c6b1e$var$g","$135e783d297c6b1e$var$_","warn","$135e783d297c6b1e$var$b","$135e783d297c6b1e$var$E","$135e783d297c6b1e$var$A","$135e783d297c6b1e$var$T","$135e783d297c6b1e$var$R","$135e783d297c6b1e$var$P","$135e783d297c6b1e$var$V","$135e783d297c6b1e$var$$","$135e783d297c6b1e$var$N","$135e783d297c6b1e$var$F","$135e783d297c6b1e$var$x","$135e783d297c6b1e$var$S","$135e783d297c6b1e$var$q","$135e783d297c6b1e$var$O","$135e783d297c6b1e$var$k","$135e783d297c6b1e$var$C","$135e783d297c6b1e$var$L","$135e783d297c6b1e$export$8fada0bf726bf278","super","toString","$135e783d297c6b1e$var$B","user","headers","$135e783d297c6b1e$var$z","getToken","invalidateToken","start","enqueueRetryable","shutdown","$135e783d297c6b1e$var$Q","changeListener","$135e783d297c6b1e$var$W","auth","accessToken","getUid","t1","$135e783d297c6b1e$var$G","l","getAuthHeaderValueForFirstParty","h","$135e783d297c6b1e$var$K","$135e783d297c6b1e$var$Y","$135e783d297c6b1e$var$H","appCheck","t2","m","$135e783d297c6b1e$var$Z","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","$135e783d297c6b1e$var$J","static","isDefaultDatabase","database","$135e783d297c6b1e$var$X","comparator","child","t3","segments","slice","offset","limit","forEach","construct","popFirst","popLast","firstSegment","lastSegment","isEmpty","isPrefixOf","isImmediateParentOf","toArray","Math","min","$135e783d297c6b1e$var$tt","canonicalString","t4","split","$135e783d297c6b1e$var$et","$135e783d297c6b1e$var$nt","isValidIdentifier","isKeyField","$135e783d297c6b1e$var$rt","fromString","emptyPath","collectionGroup","path","hasCollectionId","getCollectionGroup","getCollectionPath","$135e783d297c6b1e$var$st","$135e783d297c6b1e$var$it","isDocumentKey","$135e783d297c6b1e$var$ot","$135e783d297c6b1e$var$ut","t5","$135e783d297c6b1e$var$ct","_delegate","$135e783d297c6b1e$var$ht","$135e783d297c6b1e$var$lt","$135e783d297c6b1e$var$ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","$135e783d297c6b1e$var$dt","$135e783d297c6b1e$var$wt","$135e783d297c6b1e$var$mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","$135e783d297c6b1e$var$pt","v","A","t7","e2","I","T","R","P","e3","n1","databaseInfo","g","$","V","body","t6","status","statusText","ok","json","$135e783d297c6b1e$var$vt","crypto","msCrypto","Uint8Array","getRandomValues","e4","floor","random","$135e783d297c6b1e$var$bt","$135e783d297c6b1e$var$Et","$135e783d297c6b1e$var$At","t8","every","$135e783d297c6b1e$var$It","hasOwnProperty","$135e783d297c6b1e$var$Tt","$135e783d297c6b1e$var$Rt","$135e783d297c6b1e$var$_iterator","Symbol","iterator","$135e783d297c6b1e$var$Pt","t9","t10","t11","e5","next","binaryString","toBase64","btoa","toUint8Array","approximateByteSize","compareTo","EMPTY_BYTE_STRING","$135e783d297c6b1e$var$Vt","RegExp","$135e783d297c6b1e$var$$t","exec","substr","Number","seconds","getTime","nanos","$135e783d297c6b1e$var$Dt","$135e783d297c6b1e$var$Nt","fromBase64String","fromUint8Array","$135e783d297c6b1e$export$d9bcbd5e1ff81430","fromMillis","toDate","toMillis","nanoseconds","_compareTo","toJSON","valueOf","padStart","$135e783d297c6b1e$var$xt","mapValue","fields","__type__","stringValue","$135e783d297c6b1e$var$St","__previous_value__","$135e783d297c6b1e$var$qt","__local_write_time__","timestampValue","$135e783d297c6b1e$var$Ot","$135e783d297c6b1e$var$kt","t12","$135e783d297c6b1e$var$Ct","t13","e6","n2","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","t14","$135e783d297c6b1e$var$Lt","t15","find","$135e783d297c6b1e$var$Mt","t16","e7","n3","r1","$135e783d297c6b1e$var$Ut","t17","t18","keys","t19","$135e783d297c6b1e$var$jt","$135e783d297c6b1e$var$Bt","$135e783d297c6b1e$var$zt","$135e783d297c6b1e$var$Qt","$135e783d297c6b1e$var$Wt","$135e783d297c6b1e$var$Gt","t20","$135e783d297c6b1e$var$Kt","position","inclusive","$135e783d297c6b1e$var$Ht","$135e783d297c6b1e$var$Zt","createKeyFieldInFilter","$135e783d297c6b1e$var$te","$135e783d297c6b1e$var$se","$135e783d297c6b1e$var$ie","$135e783d297c6b1e$var$oe","$135e783d297c6b1e$var$ue","$135e783d297c6b1e$var$ee","$135e783d297c6b1e$var$ne","matches","field","op","matchesComparison","isInequality","getFlattenedFilters","getFilters","getFirstInequalityField","$135e783d297c6b1e$var$Jt","filters","S","reduce","t21","q","fromName","$135e783d297c6b1e$var$re","t24","nullValue","t25","$135e783d297c6b1e$var$ce","$135e783d297c6b1e$var$he","timestamp","toMicroseconds","toTimestamp","$135e783d297c6b1e$var$le","insert","root","copy","$135e783d297c6b1e$var$de","BLACK","remove","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","getIterator","$135e783d297c6b1e$var$fe","getIteratorFrom","getReverseIterator","getReverseIteratorFrom","EMPTY","getNext","nodeStack","pop","isReverse","hasNext","peek","color","fixUp","removeMin","isRed","moveRedLeft","rotateRight","moveRedRight","rotateLeft","colorFlip","RED","checkMaxDepth","check","pow","$135e783d297c6b1e$var$we","first","last","forEachInRange","forEachWhile","firstAfterOrEqual","$135e783d297c6b1e$var$me","unionWith","t26","iter","$135e783d297c6b1e$var$pe","t27","covers","t28","$135e783d297c6b1e$var$ye","getFieldsMap","setAll","t29","applyChanges","s1","e10","n4","e9","clone","$135e783d297c6b1e$var$ge","empty","convertToFoundDocument","createTime","documentType","documentState","convertToNoDocument","convertToUnknownDocument","setHasCommittedMutations","setHasLocalMutations","setReadTime","readTime","hasLocalMutations","hasCommittedMutations","hasPendingWrites","isValidDocument","isFoundDocument","isNoDocument","isUnknownDocument","mutableCopy","$135e783d297c6b1e$var$_e","orderBy","startAt","endAt","O","$135e783d297c6b1e$var$ve","$135e783d297c6b1e$var$be","explicitOrderBy","limitType","k","C","$135e783d297c6b1e$var$Ee","$135e783d297c6b1e$var$Ae","$135e783d297c6b1e$var$Ie","$135e783d297c6b1e$var$Te","keyField","$135e783d297c6b1e$var$Re","n5","$135e783d297c6b1e$var$Pe","$135e783d297c6b1e$var$$e","t31","e12","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","L","$135e783d297c6b1e$var$De","_","$135e783d297c6b1e$var$Ne","$135e783d297c6b1e$var$Fe","elements","$135e783d297c6b1e$var$xe","$135e783d297c6b1e$var$Se","M","U","$135e783d297c6b1e$var$Oe","isNone","updateTime","exists","$135e783d297c6b1e$var$ke","$135e783d297c6b1e$var$Ce","getFieldMask","precondition","fieldTransforms","$135e783d297c6b1e$var$Le","fieldMask","$135e783d297c6b1e$var$Me","$135e783d297c6b1e$var$Ue","$135e783d297c6b1e$var$je","asc","desc","$135e783d297c6b1e$var$Be","in","$135e783d297c6b1e$var$ze","and","or","$135e783d297c6b1e$var$Qe","$135e783d297c6b1e$var$We","$135e783d297c6b1e$var$Ge","$135e783d297c6b1e$var$Ke","$135e783d297c6b1e$var$Ye","t32","fromTimestamp","$135e783d297c6b1e$var$He","t33","$135e783d297c6b1e$var$Ze","$135e783d297c6b1e$var$Je","t34","e13","$135e783d297c6b1e$var$fn","$135e783d297c6b1e$var$Xe","$135e783d297c6b1e$var$tn","$135e783d297c6b1e$var$en","$135e783d297c6b1e$var$sn","t37","e16","structuredQuery","parent","collectionId","allDescendants","$135e783d297c6b1e$var$hn","where","t38","t39","$135e783d297c6b1e$var$an","direction","$135e783d297c6b1e$var$on","before","$135e783d297c6b1e$var$un","fieldPath","t40","unaryFilter","fieldFilter","t41","compositeFilter","$135e783d297c6b1e$var$ln","t42","fieldPaths","$135e783d297c6b1e$var$dn","$135e783d297c6b1e$var$mn","nt","et","t43","authCredentials","appCheckCredentials","connection","t44","terminate","$135e783d297c6b1e$var$pn","t45","writes","t36","e15","n7","update","updateMask","verify","updateTransforms","transform","setToServerValue","appendMissingElements","removeAllFromArray","increment","currentDocument","$135e783d297c6b1e$var$rn","$135e783d297c6b1e$var$vn","$135e783d297c6b1e$var$bn","t51","_terminated","e20","_databaseId","n10","r4","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","fetch","bind","_authCredentials","_appCheckCredentials","$135e783d297c6b1e$var$En","credentials","cacheSizeBytes","ignoreUndefinedProperties","t52","e21","$135e783d297c6b1e$export$d0e2b3272814ce82","_app","_initialized","_settingsFrozen","_terminateTask","_setSettings","t53","_settings","client","sessionIndex","iamToken","authTokenFactory","_getSettings","_terminate","settings","$135e783d297c6b1e$export$f06a05d14c3a6678","$ix4Jr","_getProvider","a","mockUserToken","$135e783d297c6b1e$export$966a03d25297d115","$135e783d297c6b1e$export$6be62b059fb12175","_path","_key","$135e783d297c6b1e$export$ab5a1a47940a200e","firestore","converter","withConverter","$135e783d297c6b1e$export$62297b13309008b2","_query","$135e783d297c6b1e$export$bf5175b0c24981cd","$135e783d297c6b1e$export$2a111da947c407d2","F","$135e783d297c6b1e$export$9f55f2e2bf8c2fc1","t55","_byteString","$135e783d297c6b1e$export$a1a8fea822d17659","_internalPath","$135e783d297c6b1e$export$c58bc8ee7ecc248d","_methodName","$135e783d297c6b1e$export$f9f719d1b6419c4","_lat","_long","isFinite","$135e783d297c6b1e$var$Bn","$135e783d297c6b1e$var$zn","toMutation","$135e783d297c6b1e$var$Qn","$135e783d297c6b1e$var$Wn","$135e783d297c6b1e$var$Gn","st","it","ot","ut","ct","at","rt","ht","lt","$135e783d297c6b1e$var$dr","methodName","ft","dt","contains","$135e783d297c6b1e$var$Kn","wt","$135e783d297c6b1e$var$Yn","$135e783d297c6b1e$var$Hn","t57","merge","mergeFields","$135e783d297c6b1e$var$ar","$135e783d297c6b1e$var$ur","t56","$135e783d297c6b1e$var$hr","$135e783d297c6b1e$var$wr","$135e783d297c6b1e$var$Zn","_toFieldTransform","$135e783d297c6b1e$var$rr","t59","r5","$135e783d297c6b1e$var$fr","$135e783d297c6b1e$var$or","u1","$135e783d297c6b1e$var$sr","t60","t61","f","$135e783d297c6b1e$var$ir","t62","e22","$135e783d297c6b1e$var$cr","fromDate","t63","e23","t64","getPrototypeOf","$135e783d297c6b1e$var$lr","search","t65","$135e783d297c6b1e$export$acab0e6ef25eb301","ref","_firestore","_converter","_document","$135e783d297c6b1e$export$6d4d04e42af6b03c","_userDataWriter","fromFirestore","convertValue","$135e783d297c6b1e$var$_r","$135e783d297c6b1e$export$8f21149d8133945c","docs","_docs","query","$135e783d297c6b1e$var$vr","$135e783d297c6b1e$export$b0e86f2c7431df4e","$135e783d297c6b1e$export$2fa187e846a241c4","t66","e25","n11","t67","$135e783d297c6b1e$export$6bbc7aef0717f3d2","$135e783d297c6b1e$export$f765fc5789dfd439","e24","_apply","_parse","$135e783d297c6b1e$var$jr","t68","e26","$135e783d297c6b1e$var$Ur","$135e783d297c6b1e$var$Mr","_field","_op","_value","$135e783d297c6b1e$export$9c59b80dda569a6e","_create","t69","e27","_queryConstraints","_getOperator","t71","e28","t70","_getQueryConstraints","t81","e34","$135e783d297c6b1e$var$Br","n16","t80","$135e783d297c6b1e$var$Qr","toFirestore","$135e783d297c6b1e$var$Wr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","t82","t83","convertDocumentKey","$135e783d297c6b1e$export$81d3477bd73c86ef","t84","e36","t47","e18","n8","r2","t48","newFoundDocument","$135e783d297c6b1e$var$gn","e37","reverse","$135e783d297c6b1e$export$22d1fdd1e73faff2","$135e783d297c6b1e$export$a4f20481fae8f78b","none","$135e783d297c6b1e$export$a13890143fb1c2dd","t101","e44","setMultipleInstances"],"version":3,"file":"terms-of-service.c2fc0c08.js.map"}