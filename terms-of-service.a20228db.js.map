{"mappings":"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","sources":["node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/indexeddb.ts","node_modules/@firebase/app/src/heartbeatService.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/regenerator-runtime/runtime.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/defaults.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/promise.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@swc/helpers/lib/_assert_this_initialized.js","node_modules/@swc/helpers/lib/_inherits.js","node_modules/@swc/helpers/lib/_set_prototype_of.js","node_modules/@swc/helpers/lib/_wrap_native_super.js","node_modules/@swc/helpers/lib/_construct.js","node_modules/@swc/helpers/lib/_is_native_function.js","node_modules/@swc/helpers/lib/_get_prototype_of.js","node_modules/@swc/helpers/lib/_create_super.js","node_modules/@swc/helpers/lib/_is_native_reflect_construct.js","node_modules/@swc/helpers/lib/_possible_constructor_return.js","node_modules/@swc/helpers/lib/_type_of.js","node_modules/process/browser.js","node_modules/@firebase/logger/src/logger.ts","node_modules/idb/build/index.js","node_modules/@swc/helpers/lib/_object_spread.js","node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","node_modules/@swc/helpers/lib/_get.js","node_modules/@swc/helpers/lib/_super_prop_base.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw new DecodeBase64StringError();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * An error encountered while decoding base64 string.\n */\nexport class DecodeBase64StringError extends Error {\n  readonly name = 'DecodeBase64StringError';\n}\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { getGlobal } from './global';\n\n/**\n * Keys for experimental properties on the `FirebaseDefaults` object.\n * @public\n */\nexport type ExperimentalKey = 'authTokenSyncURL' | 'authIdTokenMaxAge';\n\n/**\n * An object that can be injected into the environment as __FIREBASE_DEFAULTS__,\n * either as a property of globalThis, a shell environment variable, or a\n * cookie.\n *\n * This object can be used to automatically configure and initialize\n * a Firebase app as well as any emulators.\n *\n * @public\n */\nexport interface FirebaseDefaults {\n  config?: Record<string, string>;\n  emulatorHosts?: Record<string, string>;\n  _authTokenSyncURL?: string;\n  _authIdTokenMaxAge?: number;\n  /**\n   * Override Firebase's runtime environment detection and\n   * force the SDK to act as if it were in the specified environment.\n   */\n  forceEnvironment?: 'browser' | 'node';\n  [key: string]: unknown;\n}\n\ndeclare global {\n  // Need `var` for this to work.\n  // eslint-disable-next-line no-var\n  var __FIREBASE_DEFAULTS__: FirebaseDefaults | undefined;\n}\n\nconst getDefaultsFromGlobal = (): FirebaseDefaults | undefined =>\n  getGlobal().__FIREBASE_DEFAULTS__;\n\n/**\n * Attempt to read defaults from a JSON string provided to\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\n * The dots are in parens because certain compilers (Vite?) cannot\n * handle seeing that variable in comments.\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\n */\nconst getDefaultsFromEnvVariable = (): FirebaseDefaults | undefined => {\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return;\n  }\n  const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\n  if (defaultsJsonString) {\n    return JSON.parse(defaultsJsonString);\n  }\n};\n\nconst getDefaultsFromCookie = (): FirebaseDefaults | undefined => {\n  if (typeof document === 'undefined') {\n    return;\n  }\n  let match;\n  try {\n    match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\n  } catch (e) {\n    // Some environments such as Angular Universal SSR have a\n    // `document` object but error on accessing `document.cookie`.\n    return;\n  }\n  const decoded = match && base64Decode(match[1]);\n  return decoded && JSON.parse(decoded);\n};\n\n/**\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\n * (1) if such an object exists as a property of `globalThis`\n * (2) if such an object was provided on a shell environment variable\n * (3) if such an object exists in a cookie\n * @public\n */\nexport const getDefaults = (): FirebaseDefaults | undefined => {\n  try {\n    return (\n      getDefaultsFromGlobal() ||\n      getDefaultsFromEnvVariable() ||\n      getDefaultsFromCookie()\n    );\n  } catch (e) {\n    /**\n     * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\n     * to any environment case we have not accounted for. Log to\n     * info instead of swallowing so we can find these unknown cases\n     * and add paths for them if needed.\n     */\n    console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\n    return;\n  }\n};\n\n/**\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\n * @public\n */\nexport const getDefaultEmulatorHost = (\n  productName: string\n): string | undefined => getDefaults()?.emulatorHosts?.[productName];\n\n/**\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\n * for the given product.\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\n * @public\n */\nexport const getDefaultEmulatorHostnameAndPort = (\n  productName: string\n): [hostname: string, port: number] | undefined => {\n  const host = getDefaultEmulatorHost(productName);\n  if (!host) {\n    return undefined;\n  }\n  const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\n  if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\n    throw new Error(`Invalid host ${host} with no separate hostname and port!`);\n  }\n  // eslint-disable-next-line no-restricted-globals\n  const port = parseInt(host.substring(separatorIndex + 1), 10);\n  if (host[0] === '[') {\n    // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\n    return [host.substring(1, separatorIndex - 1), port];\n  } else {\n    return [host.substring(0, separatorIndex), port];\n  }\n};\n\n/**\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\n * @public\n */\nexport const getDefaultAppConfig = (): Record<string, string> | undefined =>\n  getDefaults()?.config;\n\n/**\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\n * prefixed by \"_\")\n * @public\n */\nexport const getExperimentalSetting = <T extends ExperimentalKey>(\n  name: T\n): FirebaseDefaults[`_${T}`] =>\n  getDefaults()?.[`_${name}`] as FirebaseDefaults[`_${T}`];\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\nimport { getDefaults } from './defaults';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected or specified.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  const forceEnvironment = getDefaults()?.forceEnvironment;\n  if (forceEnvironment === 'node') {\n    return true;\n  } else if (forceEnvironment === 'browser') {\n    return false;\n  }\n\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  try {\n    return typeof indexedDB === 'object';\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  /** The custom name for all FirebaseErrors. */\n  readonly name: string = ERROR_NAME;\n\n  constructor(\n    /** The error code for this error. */\n    readonly code: string,\n    message: string,\n    /** Custom data for this error. */\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from './deferred';\n\n/**\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\n * @internal\n */\nexport function promiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeInMS = 2000\n): Promise<T> {\n  const deferredPromise = new Deferred<T>();\n  setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\n  promise.then(deferredPromise.resolve, deferredPromise.reject);\n  return deferredPromise.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _assertThisInitialized;\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _inherits;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, _setPrototypeOf).default(subClass, superClass);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _setPrototypeOf;\nfunction _setPrototypeOf(o, p) {\n    return setPrototypeOf(o, p);\n}\nfunction setPrototypeOf(o1, p1) {\n    setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return setPrototypeOf(o1, p1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _wrapNativeSuper;\nvar _construct = _interopRequireDefault(require(\"./_construct\"));\nvar _isNativeFunction = _interopRequireDefault(require(\"./_is_native_function\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _wrapNativeSuper(Class) {\n    return wrapNativeSuper(Class);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction wrapNativeSuper(Class1) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    wrapNativeSuper = function wrapNativeSuper(Class) {\n        if (Class === null || !(0, _isNativeFunction).default(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, _construct).default(Class, arguments, (0, _getPrototypeOf).default(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, _setPrototypeOf).default(Wrapper, Class);\n    };\n    return wrapNativeSuper(Class1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _construct;\nvar _setPrototypeOf = _interopRequireDefault(require(\"./_set_prototype_of\"));\nfunction _construct(Parent, args, Class) {\n    return construct.apply(null, arguments);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction construct(Parent1, args1, Class1) {\n    if (isNativeReflectConstruct()) {\n        construct = Reflect.construct;\n    } else {\n        construct = function construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0, _setPrototypeOf).default(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return construct.apply(null, arguments);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeFunction;\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _getPrototypeOf;\nfunction _getPrototypeOf(o) {\n    return getPrototypeOf(o);\n}\nfunction getPrototypeOf(o1) {\n    getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return getPrototypeOf(o1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createSuper;\nvar _isNativeReflectConstruct = _interopRequireDefault(require(\"./_is_native_reflect_construct\"));\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nvar _possibleConstructorReturn = _interopRequireDefault(require(\"./_possible_constructor_return\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = (0, _isNativeReflectConstruct).default();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf).default(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf).default(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn).default(this, result);\n    };\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _isNativeReflectConstruct;\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _possibleConstructorReturn;\nvar _assertThisInitialized = _interopRequireDefault(require(\"./_assert_this_initialized\"));\nvar _typeOf = _interopRequireDefault(require(\"./_type_of\"));\nfunction _possibleConstructorReturn(self, call) {\n    if (call && ((0, _typeOf).default(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    }\n    return (0, _assertThisInitialized).default(self);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _objectSpread;\nvar _defineProperty = _interopRequireDefault(require(\"./_define_property\"));\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === 'function') {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            (0, _defineProperty).default(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { _getProvider, getApp as t, _removeServiceInstance as e, _registerComponent as n, registerVersion as r, SDK_VERSION as s } from \"@firebase/app\";\n\nimport { Component as i } from \"@firebase/component\";\n\nimport { Logger as o, LogLevel as u } from \"@firebase/logger\";\n\nimport { FirebaseError as c, getDefaultEmulatorHostnameAndPort as a, createMockUserToken as h, getModularInstance as l, deepEqual as f } from \"@firebase/util\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass d {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ d.UNAUTHENTICATED = new d(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nd.GOOGLE_CREDENTIALS = new d(\"google-credentials-uid\"), d.FIRST_PARTY = new d(\"first-party-uid\"), \nd.MOCK_USER = new d(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet w = \"9.17.2\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst m = new o(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function p(t) {\n    m.setLogLevel(t);\n}\n\nfunction y(t, ...e) {\n    if (m.logLevel <= u.DEBUG) {\n        const n = e.map(v);\n        m.debug(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\nfunction g(t, ...e) {\n    if (m.logLevel <= u.ERROR) {\n        const n = e.map(v);\n        m.error(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function _(t, ...e) {\n    if (m.logLevel <= u.WARN) {\n        const n = e.map(v);\n        m.warn(`Firestore (${w}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function v(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function b(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${w}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw g(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function E(t, e) {\n    t || b();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function A(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const I = \"ok\", T = \"cancelled\", R = \"unknown\", P = \"invalid-argument\", V = \"deadline-exceeded\", $ = \"not-found\", D = \"already-exists\", N = \"permission-denied\", F = \"unauthenticated\", x = \"resource-exhausted\", S = \"failed-precondition\", q = \"aborted\", O = \"out-of-range\", k = \"unimplemented\", C = \"internal\", L = \"unavailable\", M = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends c {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class B {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class z {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(d.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class Q {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class W {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (E(\"string\" == typeof t.accessToken), \n        new B(t.accessToken, new d(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r, this.type = \"FirstParty\", this.user = d.FIRST_PARTY, \n        this.h = new Map;\n    }\n    /** Gets an authorization token, using a provided factory function, or falling back to First Party GAPI. */    l() {\n        return this.u ? this.u() : (\n        // Make sure this really is a Gapi client.\n        E(!(\"object\" != typeof this.t || null === this.t || !this.t.auth || !this.t.auth.getAuthHeaderValueForFirstParty)), \n        this.t.auth.getAuthHeaderValueForFirstParty([]));\n    }\n    get headers() {\n        this.h.set(\"X-Goog-AuthUser\", this.i);\n        // Use array notation to prevent minification\n        const t = this.l();\n        return t && this.h.set(\"Authorization\", t), this.o && this.h.set(\"X-Goog-Iam-Authorization-Token\", this.o), \n        this.h;\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class K {\n    constructor(t, e, n, r) {\n        this.t = t, this.i = e, this.o = n, this.u = r;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o, this.u));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(d.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass Y {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class H {\n    constructor(t) {\n        this.m = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (E(\"string\" == typeof t.token), \n        new Y(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass Z {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass J {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new J(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof J && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass X {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && b(), void 0 === n ? n = t.length - e : n > t.length - e && b(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === X.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof X ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class tt extends X {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(P, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\nconst et = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class nt extends X {\n    construct(t, e, n) {\n        return new nt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return et.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        nt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new nt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(P, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(P, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(P, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(P, \"Unterminated ` in path: \" + t);\n        return new nt(e);\n    }\n    static emptyPath() {\n        return new nt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class rt {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new rt(tt.fromString(t));\n    }\n    static fromName(t) {\n        return new rt(tt.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new rt(tt.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === tt.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return tt.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new rt(new tt(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function st(t, e, n) {\n    if (!n) throw new U(P, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction it(t) {\n    if (!rt.isDocumentKey(t)) throw new U(P, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function ot(t) {\n    if (rt.isDocumentKey(t)) throw new U(P, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction ut(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : b();\n}\n\nfunction ct(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(P, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = ut(t);\n            throw new U(P, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction at(t, e) {\n    if (e <= 0) throw new U(P, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ht(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function lt(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ft = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\",\n    RunAggregationQuery: \"runAggregationQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar dt, wt;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction mt(t) {\n    if (void 0 === t) return g(\"RPC_ERROR\", \"HTTP error has no status\"), R;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return I;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return F;\n\n      case 403:\n        // Forbidden\n        return N;\n\n      case 404:\n        // Not Found\n        return $;\n\n      case 409:\n        // Conflict\n        return q;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return O;\n\n      case 429:\n        // Too Many Requests\n        return x;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return R;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return k;\n\n      case 503:\n        // Service Unavailable\n        return L;\n\n      case 504:\n        // Gateway Timeout\n        return V;\n\n      default:\n        return t >= 200 && t < 300 ? I : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? C : R;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (wt = dt || (dt = {}))[wt.OK = 0] = \"OK\", wt[wt.CANCELLED = 1] = \"CANCELLED\", \nwt[wt.UNKNOWN = 2] = \"UNKNOWN\", wt[wt.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nwt[wt.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", wt[wt.NOT_FOUND = 5] = \"NOT_FOUND\", \nwt[wt.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", wt[wt.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nwt[wt.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", wt[wt.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nwt[wt.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", wt[wt.ABORTED = 10] = \"ABORTED\", \nwt[wt.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", wt[wt.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nwt[wt.INTERNAL = 13] = \"INTERNAL\", wt[wt.UNAVAILABLE = 14] = \"UNAVAILABLE\", wt[wt.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass pt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.p = e + \"://\" + t.host, this.g = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    get v() {\n        // Both `invokeRPC()` and `invokeStreamingRPC()` use their `path` arguments to determine\n        // where to run the query, and expect the `request` to NOT specify the \"path\".\n        return !1;\n    }\n    A(t, e, n, r, s) {\n        const i = this.I(t, e);\n        y(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.T(o, r, s), this.R(t, i, o, n).then((t => (y(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw _(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    P(t, e, n, r, s, i) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.A(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    T(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + w, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    I(t, e) {\n        const n = ft[t];\n        return `${this.p}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.V = e;\n    }\n    $(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async R(t, e, n, r) {\n        var s;\n        const i = JSON.stringify(r);\n        let o;\n        try {\n            o = await this.V(e, {\n                method: \"POST\",\n                headers: n,\n                body: i\n            });\n        } catch (t) {\n            const e = t;\n            throw new U(mt(e.status), \"Request failed with error: \" + e.statusText);\n        }\n        if (!o.ok) {\n            let t = await o.json();\n            Array.isArray(t) && (t = t[0]);\n            const e = null === (s = null == t ? void 0 : t.error) || void 0 === s ? void 0 : s.message;\n            throw new U(mt(o.status), `Request failed with error: ${null != e ? e : o.statusText}`);\n        }\n        return o.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst yt = /^[_a-zA-Z][_a-zA-Z0-9]*(?:\\.[_a-zA-Z][_a-zA-Z0-9]*)*$/;\n\n/**\n * An alias for aggregation results.\n * @internal\n */ class gt {\n    /**\n     * @internal\n     * @param alias Un-escaped alias representation\n     */\n    constructor(t) {\n        this.alias = t;\n    }\n    /**\n     * Returns true if the string could be used as an alias.\n     */    static D(t) {\n        return yt.test(t);\n    }\n    /**\n     * Return an escaped and quoted string representation of the alias.\n     */    canonicalString() {\n        let t = this.alias.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\");\n        return gt.D(t) || (t = \"`\" + t + \"`\"), t;\n    }\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Concrete implementation of the Aggregate type.\n */ class _t {\n    constructor(t, e, n) {\n        this.alias = t, this.N = e, this.fieldPath = n;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */ function vt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class bt {\n    static F() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = vt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction Et(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function At(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function It(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Tt(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2023 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An error encountered while decoding base64 string.\n */\nclass Rt extends Error {\n    constructor() {\n        super(...arguments), this.name = \"Base64DecodeError\";\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass Pt {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = function(t) {\n            try {\n                return atob(t);\n            } catch (t) {\n                throw t instanceof DOMException ? new Rt(\"Invalid base64 string: \" + t) : t;\n            }\n        }\n        /** Converts a binary string to a Base64 encoded string. */ (t);\n        return new Pt(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new Pt(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return Et(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nPt.EMPTY_BYTE_STRING = new Pt(\"\");\n\nconst Vt = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function $t(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (E(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = Vt.exec(t);\n        if (E(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Dt(t.seconds),\n        nanos: Dt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Dt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Nt(t) {\n    return \"string\" == typeof t ? Pt.fromBase64String(t) : Pt.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass Ft {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(P, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(P, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return Ft.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return Ft.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new Ft(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? Et(this.nanoseconds, t.nanoseconds) : Et(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function xt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function St(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return xt(e) ? St(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function qt(t) {\n    const e = $t(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new Ft(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Ot = {\n    fields: {\n        __type__: {\n            stringValue: \"__max__\"\n        }\n    }\n};\n\n/** Extracts the backend's type order for the provided value. */\nfunction kt(t) {\n    return \"nullValue\" in t ? 0 /* TypeOrder.NullValue */ : \"booleanValue\" in t ? 1 /* TypeOrder.BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* TypeOrder.NumberValue */ : \"timestampValue\" in t ? 3 /* TypeOrder.TimestampValue */ : \"stringValue\" in t ? 5 /* TypeOrder.StringValue */ : \"bytesValue\" in t ? 6 /* TypeOrder.BlobValue */ : \"referenceValue\" in t ? 7 /* TypeOrder.RefValue */ : \"geoPointValue\" in t ? 8 /* TypeOrder.GeoPointValue */ : \"arrayValue\" in t ? 9 /* TypeOrder.ArrayValue */ : \"mapValue\" in t ? xt(t) ? 4 /* TypeOrder.ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ (t) ? 9007199254740991 /* TypeOrder.MaxValue */ : 10 /* TypeOrder.ObjectValue */ : b();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ct(t, e) {\n    if (t === e) return !0;\n    const n = kt(t);\n    if (n !== kt(e)) return !1;\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return !0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return qt(t).isEqual(qt(e));\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = $t(t.timestampValue), r = $t(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* TypeOrder.StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            return Nt(t.bytesValue).isEqual(Nt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Dt(t.integerValue) === Dt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Dt(t.doubleValue), r = Dt(e.doubleValue);\n                return n === r ? lt(n) === lt(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return At(t.arrayValue.values || [], e.arrayValue.values || [], Ct);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (It(n) !== It(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ct(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return b();\n    }\n}\n\nfunction Lt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ct(t, e)));\n}\n\nfunction Mt(t, e) {\n    if (t === e) return 0;\n    const n = kt(t), r = kt(e);\n    if (n !== r) return Et(n, r);\n    switch (n) {\n      case 0 /* TypeOrder.NullValue */ :\n      case 9007199254740991 /* TypeOrder.MaxValue */ :\n        return 0;\n\n      case 1 /* TypeOrder.BooleanValue */ :\n        return Et(t.booleanValue, e.booleanValue);\n\n      case 2 /* TypeOrder.NumberValue */ :\n        return function(t, e) {\n            const n = Dt(t.integerValue || t.doubleValue), r = Dt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TypeOrder.TimestampValue */ :\n        return Ut(t.timestampValue, e.timestampValue);\n\n      case 4 /* TypeOrder.ServerTimestampValue */ :\n        return Ut(qt(t), qt(e));\n\n      case 5 /* TypeOrder.StringValue */ :\n        return Et(t.stringValue, e.stringValue);\n\n      case 6 /* TypeOrder.BlobValue */ :\n        return function(t, e) {\n            const n = Nt(t), r = Nt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* TypeOrder.RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = Et(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* TypeOrder.GeoPointValue */ :\n        return function(t, e) {\n            const n = Et(Dt(t.latitude), Dt(e.latitude));\n            if (0 !== n) return n;\n            return Et(Dt(t.longitude), Dt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* TypeOrder.ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = Mt(n[t], r[t]);\n                if (e) return e;\n            }\n            return Et(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* TypeOrder.ObjectValue */ :\n        return function(t, e) {\n            if (t === Ot && e === Ot) return 0;\n            if (t === Ot) return 1;\n            if (e === Ot) return -1;\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = Et(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = Mt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return Et(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw b();\n    }\n}\n\nfunction Ut(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return Et(t, e);\n    const n = $t(t), r = $t(e), s = Et(n.seconds, r.seconds);\n    return 0 !== s ? s : Et(n.nanos, r.nanos);\n}\n\nfunction jt(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Bt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function zt(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function Qt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function Wt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Gt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Tt(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Gt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Gt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Kt {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\nfunction Yt(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ct(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Ht {}\n\nclass Zt extends Ht {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* Operator.IN */ === e || \"not-in\" /* Operator.NOT_IN */ === e ? this.createKeyFieldInFilter(t, e, n) : new te(t, e, n) : \"array-contains\" /* Operator.ARRAY_CONTAINS */ === e ? new se(t, n) : \"in\" /* Operator.IN */ === e ? new ie(t, n) : \"not-in\" /* Operator.NOT_IN */ === e ? new oe(t, n) : \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === e ? new ue(t, n) : new Zt(t, e, n);\n    }\n    static createKeyFieldInFilter(t, e, n) {\n        return \"in\" /* Operator.IN */ === e ? new ee(t, n) : new ne(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* Operator.NOT_EQUAL */ === this.op ? null !== e && this.matchesComparison(Mt(e, this.value)) : null !== e && kt(this.value) === kt(e) && this.matchesComparison(Mt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    matchesComparison(t) {\n        switch (this.op) {\n          case \"<\" /* Operator.LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* Operator.EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* Operator.GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return b();\n        }\n    }\n    isInequality() {\n        return [ \"<\" /* Operator.LESS_THAN */ , \"<=\" /* Operator.LESS_THAN_OR_EQUAL */ , \">\" /* Operator.GREATER_THAN */ , \">=\" /* Operator.GREATER_THAN_OR_EQUAL */ , \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n    getFlattenedFilters() {\n        return [ this ];\n    }\n    getFilters() {\n        return [ this ];\n    }\n    getFirstInequalityField() {\n        return this.isInequality() ? this.field : null;\n    }\n}\n\nclass Jt extends Ht {\n    constructor(t, e) {\n        super(), this.filters = t, this.op = e, this.S = null;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e) {\n        return new Jt(t, e);\n    }\n    matches(t) {\n        return \"and\" /* CompositeOperator.AND */ === this.op ? void 0 === this.filters.find((e => !e.matches(t))) : void 0 !== this.filters.find((e => e.matches(t)));\n    }\n    getFlattenedFilters() {\n        return null !== this.S || (this.S = this.filters.reduce(((t, e) => t.concat(e.getFlattenedFilters())), [])), \n        this.S;\n    }\n    // Returns a mutable copy of `this.filters`\n    getFilters() {\n        return Object.assign([], this.filters);\n    }\n    getFirstInequalityField() {\n        const t = this.q((t => t.isInequality()));\n        return null !== t ? t.field : null;\n    }\n    // Performs a depth-first search to find and return the first FieldFilter in the composite filter\n    // that satisfies the predicate. Returns `null` if none of the FieldFilters satisfy the\n    // predicate.\n    q(t) {\n        for (const e of this.getFlattenedFilters()) if (t(e)) return e;\n        return null;\n    }\n}\n\nfunction Xt(t, e) {\n    return t instanceof Zt ? function(t, e) {\n        return e instanceof Zt && t.op === e.op && t.field.isEqual(e.field) && Ct(t.value, e.value);\n    }(t, e) : t instanceof Jt ? function(t, e) {\n        if (e instanceof Jt && t.op === e.op && t.filters.length === e.filters.length) {\n            return t.filters.reduce(((t, n, r) => t && Xt(n, e.filters[r])), !0);\n        }\n        return !1;\n    }\n    /** Filter that matches on key fields (i.e. '__name__'). */ (t, e) : void b();\n}\n\nclass te extends Zt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = rt.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = rt.comparator(t.key, this.key);\n        return this.matchesComparison(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class ee extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e), this.keys = re(\"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class ne extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e), this.keys = re(\"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction re(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => rt.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class se extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* Operator.ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Bt(e) && Lt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class ie extends Zt {\n    constructor(t, e) {\n        super(t, \"in\" /* Operator.IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class oe extends Zt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* Operator.NOT_IN */ , e);\n    }\n    matches(t) {\n        if (Lt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !Lt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ue extends Zt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Bt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => Lt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class ce {\n    constructor(t, e = \"asc\" /* Direction.ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction ae(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class he {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new he(t);\n    }\n    static min() {\n        return new he(new Ft(0, 0));\n    }\n    static max() {\n        return new he(new Ft(253402300799, 999999999));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// An immutable sorted map implementation, based on a Left-leaning Red-Black\n// tree.\nclass le {\n    constructor(t, e) {\n        this.comparator = t, this.root = e || de.EMPTY;\n    }\n    // Returns a copy of the map, with the specified key/value added or replaced.\n    insert(t, e) {\n        return new le(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns a copy of the map, with the specified key removed.\n    remove(t) {\n        return new le(this.comparator, this.root.remove(t, this.comparator).copy(null, null, de.BLACK, null, null));\n    }\n    // Returns the value of the node with the given key, or null.\n    get(t) {\n        let e = this.root;\n        for (;!e.isEmpty(); ) {\n            const n = this.comparator(t, e.key);\n            if (0 === n) return e.value;\n            n < 0 ? e = e.left : n > 0 && (e = e.right);\n        }\n        return null;\n    }\n    // Returns the index of the element in this sorted map, or -1 if it doesn't\n    // exist.\n    indexOf(t) {\n        // Number of nodes that were pruned when descending right\n        let e = 0, n = this.root;\n        for (;!n.isEmpty(); ) {\n            const r = this.comparator(t, n.key);\n            if (0 === r) return e + n.left.size;\n            r < 0 ? n = n.left : (\n            // Count all nodes left of the node plus the node itself\n            e += n.left.size + 1, n = n.right);\n        }\n        // Node not found\n                return -1;\n    }\n    isEmpty() {\n        return this.root.isEmpty();\n    }\n    // Returns the total number of nodes in the map.\n    get size() {\n        return this.root.size;\n    }\n    // Returns the minimum key in the map.\n    minKey() {\n        return this.root.minKey();\n    }\n    // Returns the maximum key in the map.\n    maxKey() {\n        return this.root.maxKey();\n    }\n    // Traverses the map in key order and calls the specified action function\n    // for each key/value pair. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.root.inorderTraversal(t);\n    }\n    forEach(t) {\n        this.inorderTraversal(((e, n) => (t(e, n), !1)));\n    }\n    toString() {\n        const t = [];\n        return this.inorderTraversal(((e, n) => (t.push(`${e}:${n}`), !1))), `{${t.join(\", \")}}`;\n    }\n    // Traverses the map in reverse key order and calls the specified action\n    // function for each key/value pair. If action returns true, traversal is\n    // aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.root.reverseTraversal(t);\n    }\n    // Returns an iterator over the SortedMap.\n    getIterator() {\n        return new fe(this.root, null, this.comparator, !1);\n    }\n    getIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !1);\n    }\n    getReverseIterator() {\n        return new fe(this.root, null, this.comparator, !0);\n    }\n    getReverseIteratorFrom(t) {\n        return new fe(this.root, t, this.comparator, !0);\n    }\n}\n\n // end SortedMap\n// An iterator over an LLRBNode.\nclass fe {\n    constructor(t, e, n, r) {\n        this.isReverse = r, this.nodeStack = [];\n        let s = 1;\n        for (;!t.isEmpty(); ) if (s = e ? n(t.key, e) : 1, \n        // flip the comparison if we're going in reverse\n        e && r && (s *= -1), s < 0) \n        // This node is less than our start key. ignore it\n        t = this.isReverse ? t.left : t.right; else {\n            if (0 === s) {\n                // This node is exactly equal to our start key. Push it on the stack,\n                // but stop iterating;\n                this.nodeStack.push(t);\n                break;\n            }\n            // This node is greater than our start key, add it to the stack and move\n            // to the next one\n            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;\n        }\n    }\n    getNext() {\n        let t = this.nodeStack.pop();\n        const e = {\n            key: t.key,\n            value: t.value\n        };\n        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), \n        t = t.left;\n        return e;\n    }\n    hasNext() {\n        return this.nodeStack.length > 0;\n    }\n    peek() {\n        if (0 === this.nodeStack.length) return null;\n        const t = this.nodeStack[this.nodeStack.length - 1];\n        return {\n            key: t.key,\n            value: t.value\n        };\n    }\n}\n\n // end SortedMapIterator\n// Represents a node in a Left-leaning Red-Black tree.\nclass de {\n    constructor(t, e, n, r, s) {\n        this.key = t, this.value = e, this.color = null != n ? n : de.RED, this.left = null != r ? r : de.EMPTY, \n        this.right = null != s ? s : de.EMPTY, this.size = this.left.size + 1 + this.right.size;\n    }\n    // Returns a copy of the current node, optionally replacing pieces of it.\n    copy(t, e, n, r, s) {\n        return new de(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != s ? s : this.right);\n    }\n    isEmpty() {\n        return !1;\n    }\n    // Traverses the tree in key order and calls the specified action function\n    // for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    inorderTraversal(t) {\n        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);\n    }\n    // Traverses the tree in reverse key order and calls the specified action\n    // function for each node. If action returns true, traversal is aborted.\n    // Returns the first truthy value returned by action, or the last falsey\n    // value returned by action.\n    reverseTraversal(t) {\n        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);\n    }\n    // Returns the minimum node in the tree.\n    min() {\n        return this.left.isEmpty() ? this : this.left.min();\n    }\n    // Returns the maximum key in the tree.\n    minKey() {\n        return this.min().key;\n    }\n    // Returns the maximum key in the tree.\n    maxKey() {\n        return this.right.isEmpty() ? this.key : this.right.maxKey();\n    }\n    // Returns new tree, with the key/value added.\n    insert(t, e, n) {\n        let r = this;\n        const s = n(t, r.key);\n        return r = s < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === s ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n)), \n        r.fixUp();\n    }\n    removeMin() {\n        if (this.left.isEmpty()) return de.EMPTY;\n        let t = this;\n        return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), t = t.copy(null, null, null, t.left.removeMin(), null), \n        t.fixUp();\n    }\n    // Returns new tree, with the specified item removed.\n    remove(t, e) {\n        let n, r = this;\n        if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), \n        r = r.copy(null, null, null, r.left.remove(t, e), null); else {\n            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), \n            0 === e(t, r.key)) {\n                if (r.right.isEmpty()) return de.EMPTY;\n                n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());\n            }\n            r = r.copy(null, null, null, null, r.right.remove(t, e));\n        }\n        return r.fixUp();\n    }\n    isRed() {\n        return this.color;\n    }\n    // Returns new tree after performing any needed rotations.\n    fixUp() {\n        let t = this;\n        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), \n        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;\n    }\n    moveRedLeft() {\n        let t = this.colorFlip();\n        return t.right.left.isRed() && (t = t.copy(null, null, null, null, t.right.rotateRight()), \n        t = t.rotateLeft(), t = t.colorFlip()), t;\n    }\n    moveRedRight() {\n        let t = this.colorFlip();\n        return t.left.left.isRed() && (t = t.rotateRight(), t = t.colorFlip()), t;\n    }\n    rotateLeft() {\n        const t = this.copy(null, null, de.RED, null, this.right.left);\n        return this.right.copy(null, null, this.color, t, null);\n    }\n    rotateRight() {\n        const t = this.copy(null, null, de.RED, this.left.right, null);\n        return this.left.copy(null, null, this.color, null, t);\n    }\n    colorFlip() {\n        const t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);\n        return this.copy(null, null, !this.color, t, e);\n    }\n    // For testing.\n    checkMaxDepth() {\n        const t = this.check();\n        return Math.pow(2, t) <= this.size + 1;\n    }\n    // In a balanced RB tree, the black-depth (number of black nodes) from root to\n    // leaves is equal on both sides.  This function verifies that or asserts.\n    check() {\n        if (this.isRed() && this.left.isRed()) throw b();\n        if (this.right.isRed()) throw b();\n        const t = this.left.check();\n        if (t !== this.right.check()) throw b();\n        return t + (this.isRed() ? 0 : 1);\n    }\n}\n\n // end LLRBNode\n// Empty node is shared between all LLRB trees.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nde.EMPTY = null, de.RED = !0, de.BLACK = !1;\n\n// end LLRBEmptyNode\nde.EMPTY = new \n// Represents an empty node (a leaf node in the Red-Black Tree).\nclass {\n    constructor() {\n        this.size = 0;\n    }\n    get key() {\n        throw b();\n    }\n    get value() {\n        throw b();\n    }\n    get color() {\n        throw b();\n    }\n    get left() {\n        throw b();\n    }\n    get right() {\n        throw b();\n    }\n    // Returns a copy of the current node.\n    copy(t, e, n, r, s) {\n        return this;\n    }\n    // Returns a copy of the tree, with the specified key/value added.\n    insert(t, e, n) {\n        return new de(t, e);\n    }\n    // Returns a copy of the tree, with the specified key removed.\n    remove(t, e) {\n        return this;\n    }\n    isEmpty() {\n        return !0;\n    }\n    inorderTraversal(t) {\n        return !1;\n    }\n    reverseTraversal(t) {\n        return !1;\n    }\n    minKey() {\n        return null;\n    }\n    maxKey() {\n        return null;\n    }\n    isRed() {\n        return !1;\n    }\n    // For testing.\n    checkMaxDepth() {\n        return !0;\n    }\n    check() {\n        return 0;\n    }\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * SortedSet is an immutable (copy-on-write) collection that holds elements\n * in order specified by the provided comparator.\n *\n * NOTE: if provided comparator returns 0 for two elements, we consider them to\n * be equal!\n */\nclass we {\n    constructor(t) {\n        this.comparator = t, this.data = new le(this.comparator);\n    }\n    has(t) {\n        return null !== this.data.get(t);\n    }\n    first() {\n        return this.data.minKey();\n    }\n    last() {\n        return this.data.maxKey();\n    }\n    get size() {\n        return this.data.size;\n    }\n    indexOf(t) {\n        return this.data.indexOf(t);\n    }\n    /** Iterates elements in order defined by \"comparator\" */    forEach(t) {\n        this.data.inorderTraversal(((e, n) => (t(e), !1)));\n    }\n    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */    forEachInRange(t, e) {\n        const n = this.data.getIteratorFrom(t[0]);\n        for (;n.hasNext(); ) {\n            const r = n.getNext();\n            if (this.comparator(r.key, t[1]) >= 0) return;\n            e(r.key);\n        }\n    }\n    /**\n     * Iterates over `elem`s such that: start &lt;= elem until false is returned.\n     */    forEachWhile(t, e) {\n        let n;\n        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) {\n            if (!t(n.getNext().key)) return;\n        }\n    }\n    /** Finds the least element greater than or equal to `elem`. */    firstAfterOrEqual(t) {\n        const e = this.data.getIteratorFrom(t);\n        return e.hasNext() ? e.getNext().key : null;\n    }\n    getIterator() {\n        return new me(this.data.getIterator());\n    }\n    getIteratorFrom(t) {\n        return new me(this.data.getIteratorFrom(t));\n    }\n    /** Inserts or updates an element */    add(t) {\n        return this.copy(this.data.remove(t).insert(t, !0));\n    }\n    /** Deletes an element */    delete(t) {\n        return this.has(t) ? this.copy(this.data.remove(t)) : this;\n    }\n    isEmpty() {\n        return this.data.isEmpty();\n    }\n    unionWith(t) {\n        let e = this;\n        // Make sure `result` always refers to the larger one of the two sets.\n                return e.size < t.size && (e = t, t = this), t.forEach((t => {\n            e = e.add(t);\n        })), e;\n    }\n    isEqual(t) {\n        if (!(t instanceof we)) return !1;\n        if (this.size !== t.size) return !1;\n        const e = this.data.getIterator(), n = t.data.getIterator();\n        for (;e.hasNext(); ) {\n            const t = e.getNext().key, r = n.getNext().key;\n            if (0 !== this.comparator(t, r)) return !1;\n        }\n        return !0;\n    }\n    toArray() {\n        const t = [];\n        return this.forEach((e => {\n            t.push(e);\n        })), t;\n    }\n    toString() {\n        const t = [];\n        return this.forEach((e => t.push(e))), \"SortedSet(\" + t.toString() + \")\";\n    }\n    copy(t) {\n        const e = new we(this.comparator);\n        return e.data = t, e;\n    }\n}\n\nclass me {\n    constructor(t) {\n        this.iter = t;\n    }\n    getNext() {\n        return this.iter.getNext().key;\n    }\n    hasNext() {\n        return this.iter.hasNext();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */ class pe {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(nt.comparator);\n    }\n    static empty() {\n        return new pe([]);\n    }\n    /**\n     * Returns a new FieldMask object that is the result of adding all the given\n     * fields paths to this field mask.\n     */    unionWith(t) {\n        let e = new we(nt.comparator);\n        for (const t of this.fields) e = e.add(t);\n        for (const n of t) e = e.add(n);\n        return new pe(e.toArray());\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return At(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ class ye {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new ye({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !Wt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Gt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = nt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Gt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        Wt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ct(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            Wt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Tt(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new ye(Gt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class ge {\n    constructor(t, e, n, r, s, i, o) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.createTime = s, \n        this.data = i, this.documentState = o;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new ge(t, 0 /* DocumentType.INVALID */ , \n        /* version */ he.min(), \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n, r) {\n        return new ge(t, 1 /* DocumentType.FOUND_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ n, r, 0 /* DocumentState.SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new ge(t, 2 /* DocumentType.NO_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 0 /* DocumentState.SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new ge(t, 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        /* version */ e, \n        /* readTime */ he.min(), \n        /* createTime */ he.min(), ye.empty(), 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        // If a document is switching state from being an invalid or deleted\n        // document to a valid (FOUND_DOCUMENT) document, either due to receiving an\n        // update from Watch or due to applying a local set mutation on top\n        // of a deleted document, our best guess about its createTime would be the\n        // version at which the document transitioned to a FOUND_DOCUMENT.\n        return !this.createTime.isEqual(he.min()) || 2 /* DocumentType.NO_DOCUMENT */ !== this.documentType && 0 /* DocumentType.INVALID */ !== this.documentType || (this.createTime = t), \n        this.version = t, this.documentType = 1 /* DocumentType.FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* DocumentType.NO_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 0 /* DocumentState.SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* DocumentType.UNKNOWN_DOCUMENT */ , \n        this.data = ye.empty(), this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , \n        this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ , this.version = he.min(), \n        this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* DocumentState.HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* DocumentState.HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* DocumentType.INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* DocumentType.FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* DocumentType.NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* DocumentType.UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof ge && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new ge(this.key, this.documentType, this.version, this.readTime, this.createTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {createTime: ${this.createTime}}), {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass _e {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.O = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function ve(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new _e(t, e, n, r, s, i, o);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */\nclass be {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* LimitType.First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.k = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.C = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function Ee(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction Ae(t) {\n    for (const e of t.filters) {\n        const t = e.getFirstInequalityField();\n        if (null !== t) return t;\n    }\n    return null;\n}\n\n/**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction Ie(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function Te(t) {\n    const e = A(t);\n    if (null === e.k) {\n        e.k = [];\n        const t = Ae(e), n = Ee(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.k.push(new ce(t)), e.k.push(new ce(nt.keyField(), \"asc\" /* Direction.ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.k.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* Direction.ASCENDING */;\n                e.k.push(new ce(nt.keyField(), t));\n            }\n        }\n    }\n    return e.k;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function Re(t) {\n    const e = A(t);\n    if (!e.C) if (\"F\" /* LimitType.First */ === e.limitType) e.C = ve(e.path, e.collectionGroup, Te(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of Te(e)) {\n            const e = \"desc\" /* Direction.DESCENDING */ === n.dir ? \"asc\" /* Direction.ASCENDING */ : \"desc\" /* Direction.DESCENDING */;\n            t.push(new ce(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new Kt(e.endAt.position, e.endAt.inclusive) : null, r = e.startAt ? new Kt(e.startAt.position, e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.C = ve(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.C;\n}\n\nfunction Pe(t, e) {\n    e.getFirstInequalityField(), Ae(t);\n    const n = t.filters.concat([ e ]);\n    return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n}\n\nfunction Ve(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!ae(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let n = 0; n < t.filters.length; n++) if (!Xt(t.filters[n], e.filters[n])) return !1;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Yt(t.startAt, e.startAt) && Yt(t.endAt, e.endAt);\n    }(Re(t), Re(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction $e(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !lt(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.L) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: lt(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class De {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class Ne extends De {}\n\n/** Transforms an array value via a union operation. */ class Fe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class xe extends De {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class Se extends De {\n    constructor(t, e) {\n        super(), this.M = t, this.U = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class qe {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class Oe {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new Oe;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new Oe(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new Oe(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class ke {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Ce extends ke {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* MutationType.Set */;\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Le extends ke {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* MutationType.Patch */;\n    }\n    getFieldMask() {\n        return this.fieldMask;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Me extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* MutationType.Delete */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Ue extends ke {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* MutationType.Verify */ , \n        this.fieldTransforms = [];\n    }\n    getFieldMask() {\n        return null;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const je = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Be = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})(), ze = (() => {\n    const t = {\n        and: \"AND\",\n        or: \"OR\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass Qe {\n    constructor(t, e) {\n        this.databaseId = t, this.L = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction We(t, e) {\n    if (t.L) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction Ge(t, e) {\n    return t.L ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Ke(t, e) {\n    return We(t, e.toTimestamp());\n}\n\nfunction Ye(t) {\n    return E(!!t), he.fromTimestamp(function(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction He(t, e) {\n    return function(t) {\n        return new tt([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction Ze(t, e) {\n    return He(t.databaseId, e.path);\n}\n\nfunction Je(t, e) {\n    const n = function(t) {\n        const e = tt.fromString(t);\n        return E(fn(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(P, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(P, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new rt((E((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Xe(t, e) {\n    return He(t.databaseId, e);\n}\n\nfunction tn(t) {\n    return new tt([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction en(t, e, n) {\n    return {\n        name: Ze(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction nn(t, e) {\n    return \"found\" in e ? function(t, e) {\n        E(!!e.found), e.found.name, e.found.updateTime;\n        const n = Je(t, e.found.name), r = Ye(e.found.updateTime), s = e.found.createTime ? Ye(e.found.createTime) : he.min(), i = new ye({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return ge.newFoundDocument(n, r, s, i);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        E(!!e.missing), E(!!e.readTime);\n        const n = Je(t, e.missing), r = Ye(e.readTime);\n        return ge.newNoDocument(n, r);\n    }(t, e) : b();\n}\n\nfunction rn(t, e) {\n    let n;\n    if (e instanceof Ce) n = {\n        update: en(t, e.key, e.value)\n    }; else if (e instanceof Me) n = {\n        delete: Ze(t, e.key)\n    }; else if (e instanceof Le) n = {\n        update: en(t, e.key, e.data),\n        updateMask: ln(e.fieldMask)\n    }; else {\n        if (!(e instanceof Ue)) return b();\n        n = {\n            verify: Ze(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof Ne) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof Fe) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof xe) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof Se) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.U\n        };\n        throw b();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Ke(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : b();\n    }(t, e.precondition)), n;\n}\n\nfunction sn(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Xe(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Xe(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        return hn(Jt.create(t, \"and\" /* CompositeOperator.AND */));\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: an(t.field),\n                direction: on(t.dir)\n            };\n        }\n        // visible for testing\n        (t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.L || ht(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction on(t) {\n    return je[t];\n}\n\n// visible for testing\nfunction un(t) {\n    return Be[t];\n}\n\nfunction cn(t) {\n    return ze[t];\n}\n\nfunction an(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction hn(t) {\n    return t instanceof Zt ? function(t) {\n        if (\"==\" /* Operator.EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NULL\"\n                }\n            };\n        } else if (\"!=\" /* Operator.NOT_EQUAL */ === t.op) {\n            if (Qt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NAN\"\n                }\n            };\n            if (zt(t.value)) return {\n                unaryFilter: {\n                    field: an(t.field),\n                    op: \"IS_NOT_NULL\"\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: an(t.field),\n                op: un(t.op),\n                value: t.value\n            }\n        };\n    }(t) : t instanceof Jt ? function(t) {\n        const e = t.getFilters().map((t => hn(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: cn(t.op),\n                filters: e\n            }\n        };\n    }(t) : b();\n}\n\nfunction ln(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction fn(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function dn(t) {\n    return new Qe(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass wn {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.j = t, this.timerId = e, this.B = n, this.W = r, this.G = s, this.K = 0, this.Y = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.H = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.K = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    Z() {\n        this.K = this.G;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    J(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.K + this.X()), n = Math.max(0, Date.now() - this.H), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && y(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.K} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.Y = this.j.enqueueAfterDelay(this.timerId, r, (() => (this.H = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.K *= this.W, this.K < this.B && (this.K = this.B), this.K > this.G && (this.K = this.G);\n    }\n    tt() {\n        null !== this.Y && (this.Y.skipDelay(), this.Y = null);\n    }\n    cancel() {\n        null !== this.Y && (this.Y.cancel(), this.Y = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    X() {\n        return (Math.random() - .5) * this.K;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass mn extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.connection = n, \n        this.M = r, this.et = !1;\n    }\n    nt() {\n        if (this.et) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    A(t, e, n) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.connection.A(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    P(t, e, n, r) {\n        return this.nt(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([s, i]) => this.connection.P(t, e, n, s, i, r))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === F && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(R, t.toString());\n        }));\n    }\n    terminate() {\n        this.et = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function pn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        writes: e.map((t => rn(n.M, t)))\n    };\n    await n.A(\"Commit\", r, s);\n}\n\nasync function yn(t, e) {\n    const n = A(t), r = tn(n.M) + \"/documents\", s = {\n        documents: e.map((t => Ze(n.M, t)))\n    }, i = await n.P(\"BatchGetDocuments\", r, s, e.length), o = new Map;\n    i.forEach((t => {\n        const e = nn(n.M, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        E(!!e), u.push(e);\n    })), u;\n}\n\nasync function gn(t, e) {\n    const n = A(t), r = sn(n.M, Re(e));\n    return (await n.P(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Je(t, e.name), s = Ye(e.updateTime), i = e.createTime ? Ye(e.createTime) : he.min(), o = new ye({\n            mapValue: {\n                fields: e.fields\n            }\n        }), u = ge.newFoundDocument(r, s, i, o);\n        return n && u.setHasCommittedMutations(), n ? u.setHasCommittedMutations() : u;\n    }(n.M, t.document, void 0)));\n}\n\nasync function _n(t, e, n) {\n    const r = A(t), s = function(t, e, n) {\n        const r = sn(t, e), s = [];\n        return n.forEach((t => {\n            \"count\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                count: {}\n            }) : \"avg\" === t.N ? s.push({\n                alias: t.alias.canonicalString(),\n                avg: {\n                    field: an(t.fieldPath)\n                }\n            }) : \"sum\" === t.N && s.push({\n                alias: t.alias.canonicalString(),\n                sum: {\n                    field: an(t.fieldPath)\n                }\n            });\n        })), {\n            structuredAggregationQuery: {\n                aggregations: s,\n                structuredQuery: r.structuredQuery\n            },\n            parent: r.parent\n        };\n    }(r.M, Re(e), n), i = s.parent;\n    r.connection.v || delete s.parent;\n    const o = (await r.P(\"RunAggregationQuery\", i, s, /*expectedResponseCount=*/ 1)).filter((t => !!t.result));\n    // Omit RunAggregationQueryResponse that only contain readTimes.\n        return E(1 === o.length), (u = o[0]).result, u.result.aggregateFields, new ye({\n        mapValue: {\n            fields: null === (c = u.result) || void 0 === c ? void 0 : c.aggregateFields\n        }\n    });\n    var u, c;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const vn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction bn(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!vn.has(t)) {\n        y(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new pt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new Z(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = dn(t._databaseId), u = function(t, e, n, r) {\n            return new mn(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        vn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return vn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass En {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(P, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(P, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(P, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link (getFirestore:1)}.\n */ class An {\n    /** @hideconstructor */\n    constructor(t, e, n, r) {\n        this._authCredentials = t, this._appCheckCredentials = e, this._databaseId = n, \n        this._app = r, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new En({}), \n        this._settingsFrozen = !1;\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new En(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new z;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                return new K(e, t.sessionIndex || \"0\", t.iamToken || null, t.authTokenFactory || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(P, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = vn.get(t);\n            e && (y(\"ComponentProvider\", \"Removing Datastore\"), vn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction In(t, e, n) {\n    n || (n = \"(default)\");\n    const r = _getProvider(t, \"firestore/lite\");\n    if (r.isInitialized(n)) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return r.initialize({\n        options: e,\n        instanceIdentifier: n\n    });\n}\n\nfunction Tn(e, n) {\n    const r = \"object\" == typeof e ? e : t(), s = \"string\" == typeof e ? e : n || \"(default)\", i = _getProvider(r, \"firestore/lite\").getImmediate({\n        identifier: s\n    });\n    if (!i._initialized) {\n        const t = a(\"firestore\");\n        t && Rn(i, ...t);\n    }\n    return i;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function Rn(t, e, n, r = {}) {\n    var s;\n    const i = (t = ct(t, An))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && _(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = d.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = h(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(P, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new d(i);\n        }\n        t._authCredentials = new Q(new B(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link (getFirestore:1)}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function Pn(t) {\n    return t = ct(t, An), e(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an aggregation that can be performed by Firestore.\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nclass Vn {\n    /**\n     * Create a new AggregateField<T>\n     * @param _aggregateType Specifies the type of aggregation operation to perform.\n     * @param _internalFieldPath Optionally specifies the field that is aggregated.\n     * @internal\n     */\n    constructor(\n    // TODO (sum/avg) make aggregateType public when the feature is supported\n    t = \"count\", e) {\n        this._aggregateType = t, this._internalFieldPath = e, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateField\";\n    }\n}\n\n/**\n * The results of executing an aggregation query.\n */ class $n {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._userDataWriter = e, this._data = n, \n        /** A type string to uniquely identify instances of this class. */\n        this.type = \"AggregateQuerySnapshot\", this.query = t;\n    }\n    /**\n     * Returns the results of the aggregations performed over the underlying\n     * query.\n     *\n     * The keys of the returned object will be the same as those of the\n     * `AggregateSpec` object specified to the aggregation method, and the values\n     * will be the corresponding aggregation result.\n     *\n     * @returns The results of the aggregations performed over the underlying\n     * query.\n     */    data() {\n        return this._userDataWriter.convertValue(this._data.value);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */ class Dn {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new Fn(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new Dn(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class Nn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new Nn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class Fn extends Nn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new be(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new Dn(this.firestore, \n        /* converter= */ null, new rt(t));\n    }\n    withConverter(t) {\n        return new Fn(this.firestore, t, this._path);\n    }\n}\n\nfunction xn(t, e, ...n) {\n    if (t = l(t), st(\"collection\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return ot(r), new Fn(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return ot(r), new Fn(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function Sn(t, e) {\n    if (t = ct(t, An), st(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(P, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new Nn(t, \n    /* converter= */ null, function(t) {\n        return new be(tt.emptyPath(), t);\n    }(e));\n}\n\nfunction qn(t, e, ...n) {\n    if (t = l(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = bt.F()), st(\"doc\", \"path\", e), t instanceof An) {\n        const r = tt.fromString(e, ...n);\n        return it(r), new Dn(t, \n        /* converter= */ null, new rt(r));\n    }\n    {\n        if (!(t instanceof Dn || t instanceof Fn)) throw new U(P, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(tt.fromString(e, ...n));\n        return it(r), new Dn(t.firestore, t instanceof Fn ? t.converter : null, new rt(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function On(t, e) {\n    return t = l(t), e = l(e), (t instanceof Dn || t instanceof Fn) && (e instanceof Dn || e instanceof Fn) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function kn(t, e) {\n    return t = l(t), e = l(e), t instanceof Nn && e instanceof Nn && (t.firestore === e.firestore && Ve(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class Cn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new Cn(Pt.fromBase64String(t));\n        } catch (t) {\n            throw new U(P, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new Cn(Pt.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class Ln {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(P, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new nt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function Mn() {\n    return new Ln(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class Un {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class jn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(P, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(P, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return Et(this._lat, t._lat) || Et(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Bn = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class zn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Le(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Ce(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class Qn {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Le(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction Wn(t) {\n    switch (t) {\n      case 0 /* UserDataSource.Set */ :\n // fall through\n              case 2 /* UserDataSource.MergeSet */ :\n // fall through\n              case 1 /* UserDataSource.Update */ :\n        return !0;\n\n      case 3 /* UserDataSource.Argument */ :\n      case 4 /* UserDataSource.ArrayArgument */ :\n        return !1;\n\n      default:\n        throw b();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Gn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.M = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.rt(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get st() {\n        return this.settings.st;\n    }\n    /** Returns a new context with the specified settings overwritten. */    it(t) {\n        return new Gn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.M, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    ot(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.ct(t), r;\n    }\n    at(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.it({\n            path: n,\n            ut: !1\n        });\n        return r.rt(), r;\n    }\n    ht(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.it({\n            path: void 0,\n            ut: !0\n        });\n    }\n    lt(t) {\n        return dr(t, this.settings.methodName, this.settings.ft || !1, this.path, this.settings.dt);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    rt() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.ct(this.path.get(t));\n    }\n    ct(t) {\n        if (0 === t.length) throw this.lt(\"Document fields must not be empty\");\n        if (Wn(this.st) && Bn.test(t)) throw this.lt('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Kn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.M = n || dn(t);\n    }\n    /** Creates a new top-level parse context. */    wt(t, e, n, r = !1) {\n        return new Gn({\n            st: t,\n            methodName: e,\n            dt: n,\n            path: nt.emptyPath(),\n            ut: !1,\n            ft: r\n        }, this.databaseId, this.M, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Yn(t) {\n    const e = t._freezeSettings(), n = dn(t._databaseId);\n    return new Kn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Hn(t, e, n, r, s, i = {}) {\n    const o = t.wt(i.merge || i.mergeFields ? 2 /* UserDataSource.MergeSet */ : 0 /* UserDataSource.Set */ , e, n, s);\n    ar(\"Data must be an object, but it was:\", o, r);\n    const u = ur(r, o);\n    let c, a;\n    if (i.merge) c = new pe(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = hr(e, r, n);\n            if (!o.contains(s)) throw new U(P, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            wr(t, s) || t.push(s);\n        }\n        c = new pe(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new zn(new ye(u), c, a);\n}\n\nclass Zn extends Un {\n    _toFieldTransform(t) {\n        if (2 /* UserDataSource.MergeSet */ !== t.st) throw 1 /* UserDataSource.Update */ === t.st ? t.lt(`${this._methodName}() can only appear at the top level of your update data`) : t.lt(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Zn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function Jn(t, e, n) {\n    return new Gn({\n        st: 3 /* UserDataSource.Argument */ ,\n        dt: e.settings.dt,\n        methodName: t._methodName,\n        ut: n\n    }, e.databaseId, e.M, e.ignoreUndefinedProperties);\n}\n\nclass Xn extends Un {\n    _toFieldTransform(t) {\n        return new qe(t.path, new Ne);\n    }\n    isEqual(t) {\n        return t instanceof Xn;\n    }\n}\n\nclass tr extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new Fe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass er extends Un {\n    constructor(t, e) {\n        super(t), this.yt = e;\n    }\n    _toFieldTransform(t) {\n        const e = Jn(this, t, \n        /*array=*/ !0), n = this.yt.map((t => or(t, e))), r = new xe(n);\n        return new qe(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass nr extends Un {\n    constructor(t, e) {\n        super(t), this.gt = e;\n    }\n    _toFieldTransform(t) {\n        const e = new Se(t.M, $e(t.M, this.gt));\n        return new qe(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function rr(t, e, n, r) {\n    const s = t.wt(1 /* UserDataSource.Update */ , e, n);\n    ar(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = ye.empty();\n    Tt(r, ((t, r) => {\n        const u = fr(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = l(r);\n        const c = s.at(u);\n        if (r instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = or(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new pe(i);\n    return new Qn(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function sr(t, e, n, r, s, i) {\n    const o = t.wt(1 /* UserDataSource.Update */ , e, n), u = [ hr(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(P, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(hr(e, i[t])), c.push(i[t + 1]);\n    const a = [], h = ye.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!wr(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = l(n);\n        const r = o.at(e);\n        if (n instanceof Zn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = or(n, r);\n            null != t && (a.push(e), h.set(e, t));\n        }\n    }\n    const f = new pe(a);\n    return new Qn(h, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function ir(t, e, n, r = !1) {\n    return or(n, t.wt(r ? 4 /* UserDataSource.ArrayArgument */ : 3 /* UserDataSource.Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function or(t, e) {\n    if (cr(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = l(t))) return ar(\"Unsupported field value:\", e, t), ur(t, e);\n    if (t instanceof Un) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!Wn(e.st)) throw e.lt(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.lt(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.ut && 4 /* UserDataSource.ArrayArgument */ !== e.st) throw e.lt(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = or(s, e.ht(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = l(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return $e(e.M, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = Ft.fromDate(t);\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof Ft) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new Ft(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: We(e.M, n)\n            };\n        }\n        if (t instanceof jn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof Cn) return {\n            bytesValue: Ge(e.M, t._byteString)\n        };\n        if (t instanceof Dn) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.lt(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: He(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.lt(`Unsupported field value: ${ut(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction ur(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Tt(t, ((t, r) => {\n        const s = or(r, e.ot(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction cr(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Ft || t instanceof jn || t instanceof Cn || t instanceof Dn || t instanceof Un);\n}\n\nfunction ar(t, e, n) {\n    if (!cr(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = ut(n);\n        throw \"an object\" === r ? e.lt(t + \" a custom object\") : e.lt(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function hr(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = l(e)) instanceof Ln) return e._internalPath;\n    if (\"string\" == typeof e) return fr(t, e);\n    throw dr(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const lr = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function fr(t, e, n) {\n    if (e.search(lr) >= 0) throw dr(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new Ln(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw dr(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction dr(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(P, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function wr(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class mr {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new Dn(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new pr(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(_r(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class pr extends mr {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class yr {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function gr(t, e) {\n    return t = l(t), e = l(e), t instanceof mr && e instanceof mr ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof yr && e instanceof yr && (kn(t.query, e.query) && At(t.docs, e.docs, gr));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function _r(t, e) {\n    return \"string\" == typeof e ? fr(t, e) : e instanceof Ln ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An `AppliableConstraint` is an abstraction of a constraint that can be applied\n * to a Firestore query.\n */\nclass vr {}\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link startAt}, {@link startAfter}, {@link\n * endBefore}, {@link endAt}, {@link limit}, {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */ class br extends vr {}\n\nfunction Er(t, e, ...n) {\n    let r = [];\n    e instanceof vr && r.push(e), r = r.concat(n), function(t) {\n        const e = t.filter((t => t instanceof Tr)).length, n = t.filter((t => t instanceof Ar)).length;\n        if (e > 1 || e > 0 && n > 0) throw new U(P, \"InvalidQuery. When using composite filters, you cannot use more than one filter at the top level. Consider nesting the multiple filters within an `and(...)` statement. For example: change `query(query, where(...), or(...))` to `query(query, and(where(...), or(...)))`.\");\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */ (r);\n    for (const e of r) t = e._apply(t);\n    return t;\n}\n\n/**\n * A `QueryFieldFilterConstraint` is used to narrow the set of documents returned by\n * a Firestore query by filtering on one or more document fields.\n * `QueryFieldFilterConstraint`s are created by invoking {@link where} and can then\n * be passed to {@link query} to create a new query instance that also contains\n * this `QueryFieldFilterConstraint`.\n */ class Ar extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e, n) {\n        super(), this._field = t, this._op = e, this._value = n, \n        /** The type of this query constraint */\n        this.type = \"where\";\n    }\n    static _create(t, e, n) {\n        return new Ar(t, e, n);\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return jr(t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e));\n    }\n    _parse(t) {\n        const e = Yn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* Operator.ARRAY_CONTAINS */ === i || \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ === i) throw new U(P, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i) {\n                    Ur(o, i);\n                    const e = [];\n                    for (const n of o) e.push(Mr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = Mr(r, t, o);\n            } else \"in\" /* Operator.IN */ !== i && \"not-in\" /* Operator.NOT_IN */ !== i && \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ !== i || Ur(o, i), \n            u = ir(n, e, o, \n            /* allowArrays= */ \"in\" /* Operator.IN */ === i || \"not-in\" /* Operator.NOT_IN */ === i);\n            return Zt.create(s, i, u);\n        }(t._query, \"where\", e, t.firestore._databaseId, this._field, this._op, this._value);\n        return n;\n    }\n}\n\n/**\n * Creates a {@link QueryFieldFilterConstraint} that enforces that documents\n * must contain the specified field and that the value should satisfy the\n * relation constraint provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link QueryFieldFilterConstraint}.\n */ function Ir(t, e, n) {\n    const r = e, s = _r(\"where\", t);\n    return Ar._create(s, r, n);\n}\n\n/**\n * A `QueryCompositeFilterConstraint` is used to narrow the set of documents\n * returned by a Firestore query by performing the logical OR or AND of multiple\n * {@link QueryFieldFilterConstraint}s or {@link QueryCompositeFilterConstraint}s.\n * `QueryCompositeFilterConstraint`s are created by invoking {@link or} or\n * {@link and} and can then be passed to {@link query} to create a new query\n * instance that also contains the `QueryCompositeFilterConstraint`.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ class Tr extends vr {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e) {\n        super(), this.type = t, this._queryConstraints = e;\n    }\n    static _create(t, e) {\n        return new Tr(t, e);\n    }\n    _parse(t) {\n        const e = this._queryConstraints.map((e => e._parse(t))).filter((t => t.getFilters().length > 0));\n        return 1 === e.length ? e[0] : Jt.create(e, this._getOperator());\n    }\n    _apply(t) {\n        const e = this._parse(t);\n        return 0 === e.getFilters().length ? t : (function(t, e) {\n            let n = t;\n            const r = e.getFlattenedFilters();\n            for (const t of r) jr(n, t), n = Pe(n, t);\n        }\n        // Checks if any of the provided filter operators are included in the given list of filters and\n        // returns the first one that is, or null if none are.\n        (t._query, e), new Nn(t.firestore, t.converter, Pe(t._query, e)));\n    }\n    _getQueryConstraints() {\n        return this._queryConstraints;\n    }\n    _getOperator() {\n        return \"and\" === this.type ? \"and\" /* CompositeOperator.AND */ : \"or\" /* CompositeOperator.OR */;\n    }\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a disjunction of\n * the given filter constraints. A disjunction filter includes a document if it\n * satisfies any of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a disjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Rr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"or\", t))), Tr._create(\"or\" /* CompositeOperator.OR */ , t);\n}\n\n/**\n * Creates a new {@link QueryCompositeFilterConstraint} that is a conjunction of\n * the given filter constraints. A conjunction filter includes a document if it\n * satisfies all of the given filters.\n *\n * @param queryConstraints - Optional. The list of\n * {@link QueryFilterConstraint}s to perform a conjunction for. These must be\n * created with calls to {@link where}, {@link or}, or {@link and}.\n * @returns The newly created {@link QueryCompositeFilterConstraint}.\n * @internal TODO remove this internal tag with OR Query support in the server\n */ function Pr(...t) {\n    // Only support QueryFilterConstraints\n    return t.forEach((t => zr(\"and\", t))), Tr._create(\"and\" /* CompositeOperator.AND */ , t);\n}\n\n/**\n * A `QueryOrderByConstraint` is used to sort the set of documents returned by a\n * Firestore query. `QueryOrderByConstraint`s are created by invoking\n * {@link orderBy} and can then be passed to {@link query} to create a new query\n * instance that also contains this `QueryOrderByConstraint`.\n *\n * Note: Documents that do not contain the orderBy field will not be present in\n * the query result.\n */ class Vr extends br {\n    /**\n     * @internal\n     */\n    constructor(t, e) {\n        super(), this._field = t, this._direction = e, \n        /** The type of this query constraint */\n        this.type = \"orderBy\";\n    }\n    static _create(t, e) {\n        return new Vr(t, e);\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(P, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(P, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new ce(e, n);\n            return function(t, e) {\n                if (null === Ee(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = Ae(t);\n                    null !== n && Br(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this._field, this._direction);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new be(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryOrderByConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * Note: Documents that do not contain the specified field will not be present\n * in the query result.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link QueryOrderByConstraint}.\n */ function $r(t, e = \"asc\") {\n    const n = e, r = _r(\"orderBy\", t);\n    return Vr._create(r, n);\n}\n\n/**\n * A `QueryLimitConstraint` is used to limit the number of documents returned by\n * a Firestore query.\n * `QueryLimitConstraint`s are created by invoking {@link limit} or\n * {@link limitToLast} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryLimitConstraint`.\n */ class Dr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._limit = e, this._limitType = n;\n    }\n    static _create(t, e, n) {\n        return new Dr(t, e, n);\n    }\n    _apply(t) {\n        return new Nn(t.firestore, t.converter, function(t, e, n) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this._limit, this._limitType));\n    }\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the first matching\n * documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Nr(t) {\n    return at(\"limit\", t), Dr._create(\"limit\", t, \"F\" /* LimitType.First */);\n}\n\n/**\n * Creates a {@link QueryLimitConstraint} that only returns the last matching\n * documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link QueryLimitConstraint}.\n */ function Fr(t) {\n    return at(\"limitToLast\", t), Dr._create(\"limitToLast\", t, \"L\" /* LimitType.Last */);\n}\n\n/**\n * A `QueryStartAtConstraint` is used to exclude documents from the start of a\n * result set returned by a Firestore query.\n * `QueryStartAtConstraint`s are created by invoking {@link (startAt:1)} or\n * {@link (startAfter:1)} and can then be passed to {@link query} to create a\n * new query instance that also contains this `QueryStartAtConstraint`.\n */ class xr extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new xr(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction Sr(...t) {\n    return xr._create(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction qr(...t) {\n    return xr._create(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\n/**\n * A `QueryEndAtConstraint` is used to exclude documents from the end of a\n * result set returned by a Firestore query.\n * `QueryEndAtConstraint`s are created by invoking {@link (endAt:1)} or\n * {@link (endBefore:1)} and can then be passed to {@link query} to create a new\n * query instance that also contains this `QueryEndAtConstraint`.\n */ class Or extends br {\n    /**\n     * @internal\n     */\n    constructor(\n    /** The type of this query constraint */\n    t, e, n) {\n        super(), this.type = t, this._docOrFields = e, this._inclusive = n;\n    }\n    static _create(t, e, n) {\n        return new Or(t, e, n);\n    }\n    _apply(t) {\n        const e = Lr(t, this.type, this._docOrFields, this._inclusive);\n        return new Nn(t.firestore, t.converter, function(t, e) {\n            return new be(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction kr(...t) {\n    return Or._create(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction Cr(...t) {\n    return Or._create(\"endAt\", t, \n    /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function Lr(t, e, n, r) {\n    if (n[0] = l(n[0]), n[0] instanceof mr) return function(t, e, n, r, s) {\n        if (!r) throw new U($, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of Te(t)) if (n.field.isKeyField()) i.push(jt(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (xt(t)) throw new U(P, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(P, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new Kt(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Yn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(P, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(P, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!Ie(t) && -1 !== c.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(tt.fromString(c));\n                    if (!rt.isDocumentKey(n)) throw new U(P, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new rt(n);\n                    u.push(jt(e, s));\n                } else {\n                    const t = ir(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new Kt(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction Mr(t, e, n) {\n    if (\"string\" == typeof (n = l(n))) {\n        if (\"\" === n) throw new U(P, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!Ie(e) && -1 !== n.indexOf(\"/\")) throw new U(P, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(tt.fromString(n));\n        if (!rt.isDocumentKey(r)) throw new U(P, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return jt(t, new rt(r));\n    }\n    if (n instanceof Dn) return jt(t, n._key);\n    throw new U(P, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${ut(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function Ur(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(P, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n}\n\n/**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * This is not a comprehensive check, and this function should be removed in the\n * long term. Validations should occur in the Firestore backend.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one inequality per query.\n * 2. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n */ function jr(t, e) {\n    if (e.isInequality()) {\n        const n = Ae(t), r = e.field;\n        if (null !== n && !n.isEqual(r)) throw new U(P, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${r.toString()}'`);\n        const s = Ee(t);\n        null !== s && Br(t, r, s);\n    }\n    const n = function(t, e) {\n        for (const n of t) for (const t of n.getFlattenedFilters()) if (e.indexOf(t.op) >= 0) return t.op;\n        return null;\n    }(t.filters, function(t) {\n        switch (t) {\n          case \"!=\" /* Operator.NOT_EQUAL */ :\n            return [ \"!=\" /* Operator.NOT_EQUAL */ , \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ :\n          case \"in\" /* Operator.IN */ :\n            return [ \"not-in\" /* Operator.NOT_IN */ ];\n\n          case \"not-in\" /* Operator.NOT_IN */ :\n            return [ \"array-contains-any\" /* Operator.ARRAY_CONTAINS_ANY */ , \"in\" /* Operator.IN */ , \"not-in\" /* Operator.NOT_IN */ , \"!=\" /* Operator.NOT_EQUAL */ ];\n\n          default:\n            return [];\n        }\n    }(e.op));\n    if (null !== n) \n    // Special case when it's a duplicate op to give a slightly clearer error message.\n    throw n === e.op ? new U(P, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(P, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n}\n\nfunction Br(t, e, n) {\n    if (!n.isEqual(e)) throw new U(P, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\nfunction zr(t, e) {\n    if (!(e instanceof Ar || e instanceof Tr)) throw new U(P, `Function ${t}() requires AppliableConstraints created with a call to 'where(...)', 'or(...)', or 'and(...)'.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction Qr(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass Wr extends class {\n    convertValue(t, e = \"none\") {\n        switch (kt(t)) {\n          case 0 /* TypeOrder.NullValue */ :\n            return null;\n\n          case 1 /* TypeOrder.BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* TypeOrder.NumberValue */ :\n            return Dt(t.integerValue || t.doubleValue);\n\n          case 3 /* TypeOrder.TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* TypeOrder.ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* TypeOrder.StringValue */ :\n            return t.stringValue;\n\n          case 6 /* TypeOrder.BlobValue */ :\n            return this.convertBytes(Nt(t.bytesValue));\n\n          case 7 /* TypeOrder.RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* TypeOrder.GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* TypeOrder.ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* TypeOrder.ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw b();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Tt(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new jn(Dt(t.latitude), Dt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = St(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp(qt(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = $t(t);\n        return new Ft(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = tt.fromString(t);\n        E(fn(n));\n        const r = new J(n.get(1), n.get(3)), s = new rt(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        g(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new Cn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new Dn(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function Gr(t) {\n    const e = bn((t = ct(t, Dn)).firestore), n = new Wr(t.firestore);\n    return yn(e, [ t._key ]).then((e => {\n        E(1 === e.length);\n        const r = e[0];\n        return new mr(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function Kr(t) {\n    !function(t) {\n        if (\"L\" /* LimitType.Last */ === t.limitType && 0 === t.explicitOrderBy.length) throw new U(k, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ct(t, Nn))._query);\n    const e = bn(t.firestore), n = new Wr(t.firestore);\n    return gn(e, t._query).then((e => {\n        const r = e.map((e => new pr(t.firestore, n, e.key, e, t.converter)));\n        return \"L\" /* LimitType.Last */ === t._query.limitType && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new yr(t, r);\n    }));\n}\n\nfunction Yr(t, e, n) {\n    const r = Qr((t = ct(t, Dn)).converter, e, n), s = Hn(Yn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return pn(bn(t.firestore), [ s.toMutation(t._key, Oe.none()) ]);\n}\n\nfunction Hr(t, e, n, ...r) {\n    const s = Yn((t = ct(t, Dn)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(s, \"updateDoc\", t._key, e, n, r) : rr(s, \"updateDoc\", t._key, e);\n    return pn(bn(t.firestore), [ i.toMutation(t._key, Oe.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Zr(t) {\n    return pn(bn((t = ct(t, Dn)).firestore), [ new Me(t._key, Oe.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Jr(t, e) {\n    const n = qn(t = ct(t, Fn)), r = Qr(t.converter, e), s = Hn(Yn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return pn(bn(t.firestore), [ s.toMutation(n._key, Oe.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Calculates the number of documents in the result set of the given query,\n * without actually downloading the documents.\n *\n * Using this function to count the documents is efficient because only the\n * final count, not the documents' data, is downloaded. This function can even\n * count the documents if the result set would be prohibitively large to\n * download entirely (e.g. thousands of documents).\n *\n * @param query - The query whose result set size to calculate.\n * @returns A Promise that will be resolved with the count; the count can be\n * retrieved from `snapshot.data().count`, where `snapshot` is the\n * `AggregateQuerySnapshot` to which the returned Promise resolves.\n */ function Xr(t) {\n    return ts(t, {\n        count: rs()\n    });\n}\n\n/**\n * Calculates the specified aggregations over the documents in the result\n * set of the given query, without actually downloading the documents.\n *\n * Using this function to perform aggregations is efficient because only the\n * final aggregation values, not the documents' data, is downloaded. This\n * function can even perform aggregations of the documents if the result set\n * would be prohibitively large to download entirely (e.g. thousands of documents).\n *\n * @param query The query whose result set to aggregate over.\n * @param aggregateSpec An `AggregateSpec` object that specifies the aggregates\n * to perform over the result set. The AggregateSpec specifies aliases for each\n * aggregate, which can be used to retrieve the aggregate result.\n * @example\n * ```typescript\n * const aggregateSnapshot = await getAggregate(query, {\n *   countOfDocs: count(),\n *   totalHours: sum('hours'),\n *   averageScore: average('score')\n * });\n *\n * const countOfDocs: number = aggregateSnapshot.data().countOfDocs;\n * const totalHours: number = aggregateSnapshot.data().totalHours;\n * const averageScore: number | null = aggregateSnapshot.data().averageScore;\n * ```\n * @internal TODO (sum/avg) remove when public\n */ function ts(t, e) {\n    const n = ct(t.firestore, An), r = bn(n), s = function(t, e) {\n        const n = [];\n        for (const r in t) Object.prototype.hasOwnProperty.call(t, r) && n.push(e(t[r], r, t));\n        return n;\n    }(e, ((t, e) => new _t(new gt(e), t._aggregateType, t._internalFieldPath)));\n    // Run the aggregation and convert the results\n    return _n(r, t._query, s).then((e => function(t, e, n) {\n        const r = new Wr(t);\n        return new $n(e, r, n);\n    }\n    /**\n * Create an AggregateField object that can be used to compute the sum of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to sum across the result set.\n * @internal TODO (sum/avg) remove when public\n */ (n, t, e)));\n}\n\nfunction es(t) {\n    return new Vn(\"sum\", hr(\"sum\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the average of\n * a specified field over a range of documents in the result set of a query.\n * @param field Specifies the field to average across the result set.\n * @internal TODO (sum/avg) remove when public\n */ function ns(t) {\n    return new Vn(\"avg\", hr(\"average\", t));\n}\n\n/**\n * Create an AggregateField object that can be used to compute the count of\n * documents in the result set of a query.\n * @internal TODO (sum/avg) remove when public\n */ function rs() {\n    return new Vn(\"count\");\n}\n\n/**\n * Compares two 'AggregateField` instances for equality.\n *\n * @param left Compare this AggregateField to the `right`.\n * @param right Compare this AggregateField to the `left`.\n * @internal TODO (sum/avg) remove when public\n */ function ss(t, e) {\n    var n, r;\n    return t instanceof Vn && e instanceof Vn && t._aggregateType === e._aggregateType && (null === (n = t._internalFieldPath) || void 0 === n ? void 0 : n.canonicalString()) === (null === (r = e._internalFieldPath) || void 0 === r ? void 0 : r.canonicalString());\n}\n\n/**\n * Compares two `AggregateQuerySnapshot` instances for equality.\n *\n * Two `AggregateQuerySnapshot` instances are considered \"equal\" if they have\n * underlying queries that compare equal, and the same data.\n *\n * @param left - The first `AggregateQuerySnapshot` to compare.\n * @param right - The second `AggregateQuerySnapshot` to compare.\n *\n * @returns `true` if the objects are \"equal\", as defined above, or `false`\n * otherwise.\n */ function is(t, e) {\n    return kn(t.query, e.query) && f(t.data(), e.data());\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function os() {\n    return new Zn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function us() {\n    return new Xn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function cs(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new tr(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function as(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new er(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function hs(t) {\n    return new nr(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class ls {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Yn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, Oe.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : rr(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, Oe.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = fs(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Me(e._key, Oe.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction fs(t, e) {\n    if ((t = l(t)).firestore !== e) throw new U(P, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function ds(t) {\n    const e = bn(t = ct(t, An));\n    return new ls(t, (t => pn(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class ws {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(P, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await yn(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Me(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = rt.fromPath(e);\n            this.mutations.push(new Ue(n, this.precondition(n)));\n        })), await pn(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw b();\n            // Represent a deleted doc using SnapshotVersion.min().\n            e = he.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(q, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? e.isEqual(he.min()) ? Oe.exists(!1) : Oe.updateTime(e) : Oe.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(he.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(P, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return Oe.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return Oe.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const ms = {\n    maxAttempts: 5\n};\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass ps {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.datastore = e, this.options = n, this.updateFunction = r, \n        this.deferred = s, this._t = n.maxAttempts, this.vt = new wn(this.asyncQueue, \"transaction_retry\" /* TimerId.TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this._t -= 1, this.bt();\n    }\n    bt() {\n        this.vt.J((async () => {\n            const t = new ws(this.datastore), e = this.Et(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.At(t);\n                }))));\n            })).catch((t => {\n                this.At(t);\n            }));\n        }));\n    }\n    Et(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ht(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    At(t) {\n        this._t > 0 && this.It(t) ? (this._t -= 1, this.asyncQueue.enqueueAndForget((() => (this.bt(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    It(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || \"already-exists\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return b();\n\n                  case T:\n                  case R:\n                  case V:\n                  case x:\n                  case C:\n                  case L:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case F:\n                    return !1;\n\n                  case P:\n                  case $:\n                  case D:\n                  case N:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case q:\n                  case O:\n                  case k:\n                  case M:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function ys() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class gs {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new j, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new gs(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class _s {\n    constructor() {\n        // The last promise in the queue.\n        this.Tt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Rt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.Pt = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.Vt = [], \n        // visible for testing\n        this.$t = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.Dt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.Nt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ft = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.vt = new wn(this, \"async_queue_retry\" /* TimerId.AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.xt = () => {\n            const t = ys();\n            t && y(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.vt.tt();\n        };\n        const t = ys();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.xt);\n    }\n    get isShuttingDown() {\n        return this.Pt;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.St(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.qt(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.Pt) {\n            this.Pt = !0, this.Nt = t || !1;\n            const e = ys();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.xt);\n        }\n    }\n    enqueue(t) {\n        if (this.St(), this.Pt) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new j;\n        return this.qt((() => this.Pt && this.Nt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Rt.push(t), this.Ot())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async Ot() {\n        if (0 !== this.Rt.length) {\n            try {\n                await this.Rt[0](), this.Rt.shift(), this.vt.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                y(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Rt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.vt.J((() => this.Ot()));\n        }\n    }\n    qt(t) {\n        const e = this.Tt.then((() => (this.Dt = !0, t().catch((t => {\n            this.$t = t, this.Dt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw g(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.Dt = !1, t))))));\n        return this.Tt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.St(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ft.indexOf(t) > -1 && (e = 0);\n        const r = gs.createAndSchedule(this, t, e, n, (t => this.kt(t)));\n        return this.Vt.push(r), r;\n    }\n    St() {\n        this.$t && b();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Ct() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Tt, await t;\n        } while (t !== this.Tt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Lt(t) {\n        for (const e of this.Vt) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    Mt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Ct().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.Vt.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.Vt) if (e.skipDelay(), \"all\" /* TimerId.All */ !== t && e.timerId === t) break;\n            return this.Ct();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Ut(t) {\n        this.Ft.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    kt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.Vt.indexOf(t);\n        this.Vt.splice(e, 1);\n    }\n}\n\nclass vs {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Yn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = fs(t, this._firestore), n = new Wr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return b();\n            const r = t[0];\n            if (r.isFoundDocument()) return new mr(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new mr(this._firestore, n, e._key, null, e.converter);\n            throw b();\n        }));\n    }\n    set(t, e, n) {\n        const r = fs(t, this._firestore), s = Qr(r.converter, e, n), i = Hn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = fs(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = l(e)) || e instanceof Ln ? sr(this._dataReader, \"Transaction.update\", s._key, e, n, r) : rr(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = fs(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @param options - An options object to configure maximum number of attempts to\n * commit.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function bs(t, e, n) {\n    const r = bn(t = ct(t, An)), s = Object.assign(Object.assign({}, ms), n);\n    !function(t) {\n        if (t.maxAttempts < 1) throw new U(P, \"Max attempts must be at least 1\");\n    }(s);\n    const i = new j;\n    return new ps(new _s, r, s, (n => e(new vs(t, n))), i).run(), i.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    w = t;\n}(`${s}_lite`), n(new i(\"firestore/lite\", ((t, {instanceIdentifier: e, options: n}) => {\n    const r = t.getProvider(\"app\").getImmediate(), s = new An(new W(t.getProvider(\"auth-internal\")), new H(t.getProvider(\"app-check-internal\")), function(t, e) {\n        if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(P, '\"projectId\" not provided in firebase.initializeApp.');\n        return new J(t.options.projectId, e);\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (r, e), r);\n    return n && s._setSettings(n), s;\n}), \"PUBLIC\").setMultipleInstances(!0)), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nr(\"firestore-lite\", \"3.8.4\", \"\"), r(\"firestore-lite\", \"3.8.4\", \"__BUILD_TARGET__\");\n\nexport { Vn as AggregateField, $n as AggregateQuerySnapshot, Cn as Bytes, Fn as CollectionReference, Dn as DocumentReference, mr as DocumentSnapshot, Ln as FieldPath, Un as FieldValue, An as Firestore, U as FirestoreError, jn as GeoPoint, Nn as Query, Tr as QueryCompositeFilterConstraint, br as QueryConstraint, pr as QueryDocumentSnapshot, Or as QueryEndAtConstraint, Ar as QueryFieldFilterConstraint, Dr as QueryLimitConstraint, Vr as QueryOrderByConstraint, yr as QuerySnapshot, xr as QueryStartAtConstraint, Ft as Timestamp, vs as Transaction, ls as WriteBatch, Jr as addDoc, ss as aggregateFieldEqual, is as aggregateQuerySnapshotEqual, Pr as and, as as arrayRemove, cs as arrayUnion, ns as average, xn as collection, Sn as collectionGroup, Rn as connectFirestoreEmulator, rs as count, Zr as deleteDoc, os as deleteField, qn as doc, Mn as documentId, Cr as endAt, kr as endBefore, ts as getAggregate, Xr as getCount, Gr as getDoc, Kr as getDocs, Tn as getFirestore, hs as increment, In as initializeFirestore, Nr as limit, Fr as limitToLast, Rr as or, $r as orderBy, Er as query, kn as queryEqual, On as refEqual, bs as runTransaction, us as serverTimestamp, Yr as setDoc, p as setLogLevel, gr as snapshotEqual, qr as startAfter, Sr as startAt, es as sum, Pn as terminate, Hr as updateDoc, Ir as where, ds as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n"],"names":["container","$parcel$interopDefault","$8MBJY","this","PlatformLoggerServiceImpl","$a2hTj","getProviders","map","provider","$0913f93b5b3c9bac$var$isVersionServiceProvider","$0913f93b5b3c9bac$var$_obj","$0913f93b5b3c9bac$var$logger","$kZfxc","Logger","$0913f93b5b3c9bac$export$9f30fa0c10967f7f","$0913f93b5b3c9bac$var$PLATFORM_LOG_STRING","$hKHmD","$0913f93b5b3c9bac$var$name$o","Map","app","component","debug","concat","name","e","has","componentName","set","_didIteratorError","_iteratorError","undefined","$0913f93b5b3c9bac$export$fa5244b94c62d36a","err","$0913f93b5b3c9bac$export$fa0d6da0f5838f50","name1","getProvider","getImmediate","optional","heartbeatController","triggerHeartbeat","$0913f93b5b3c9bac$export$48d18de2ff1c45a5","name2","clearInstance","instanceIdentifier","$0913f93b5b3c9bac$var$ERROR_FACTORY","$2xDiJ","ErrorFactory","$0913f93b5b3c9bac$var$ERRORS","_this","FirebaseAppImpl","_isDeleted","config","automaticDataCollectionEnabled","_automaticDataCollectionEnabled","get","key","checkDestroyed","_options","_config","_container","setLogLevelImpl","val","arguments","length","create","appName","name3","$6ExWU","ComponentContainer","_step","_iterator","$0913f93b5b3c9bac$export$9566bce3835c0f28","values","Symbol","iterator","_iteratorNormalCompletion","next","done","value","return","newApp","$0913f93b5b3c9bac$export$f9962582c9e66d99","name5","$0913f93b5b3c9bac$export$b4e3c36c855b14b5","$0913f93b5b3c9bac$export$c55cfd413944906d","warn","warning","join","Component","library","$0913f93b5b3c9bac$var$STORE_NAME","$ajgRO","openDB","db","oldVersion","createObjectStore","message","apply","idbGetError","$2TvXO","wrap","_ctx","prev","sent","abrupt","transaction","objectStore","$0913f93b5b3c9bac$var$computeKey","t0","stop","$0913f93b5b3c9bac$var$_writeHeartbeatsToIndexedDB","$bpxeT","mark","_callee","heartbeatObject","FirebaseError","_storage","read","then","result","agent","platformLogger","getPlatformInfoString","date","$0913f93b5b3c9bac$var$getUTCDateString","_heartbeatsCache","hbTimestamp","Date","singleDateHeartbeat","valueOf","overwrite","ref","heartbeatsToSend","unsentEntries","headerString","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","Object","defineProperty","module","exports","default","fn","self","args","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","obj","arr","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","parcelRequire","__esModule","Array","isArray","$f215c72f040a88cf$var$_arrayLikeToArray","len","arr2","iter","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","call","slice","constructor","test","$21b983287c82ebd3$var$runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err1","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","next1","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","keys","object","key1","reverse","pop","skipTempReset","charAt","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","instanceFactory","multipleInstances","onInstanceCreated","Provider","identifier","instancesDeferred","normalizedIdentifier","deferred","Deferred","isInitialized","shouldAutoInitialize","promise","_a","options","entries","getOrInitializeService","delete","instancesOptions","instances","services","service","INTERNAL","$8nrFW","filter","_delete","$4d80d01579d5bd6a$var$DEFAULT_ENTRY_NAME","opts","normalizeInstanceIdentifier","isComponentSet","_value","$1t1Wn","instanceDeferred","normalizedDeferredIdentifier","callback","existingCallbacks","onInitCallbacks","Set","add","existingInstance","callbacks","invokeOnInitCallbacks","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","$ds8z5","$1d9d263a787f8021$var$stringToByteArray$1","str","out","p","c","charCodeAt","charToByteMapWebSafe_","ENCODED_VALS_BASE","HAS_NATIVE_SUPPORT","atob","init_","byte1","input","haveByte2","byte2","stringToByteArray","haveByte3","byte3","outByte1","outByte3","outByte4","output","byteToCharMap","outByte2","webSafe","btoa","encodeByteArray","bytes","pos","c1","String","fromCharCode","c2","u","c22","c31","$1d9d263a787f8021$var$byteArrayToString","decodeStringToByteArray","charToByteMap","charToByteMap_","byte4","$1d9d263a787f8021$export$55ca9d4bee46aeb3","byteToCharMap_","byteToCharMapWebSafe_","ENCODED_VALS","ENCODED_VALS_WEBSAFE","$eYQtU","DecodeBase64StringError","_super","$4c7YB","utf8Bytes","replace","$1d9d263a787f8021$export$c62426fdd000a97e","$1d9d263a787f8021$export$b3b2de96497acc47","decodeString","console","$1d9d263a787f8021$var$getDefaultsFromGlobal","window","$parcel$global","$1d9d263a787f8021$export$a4e55266d2135a7f","__FIREBASE_DEFAULTS__","$1d9d263a787f8021$export$212bb2fc580a90a8","$6qd2L","env","document","$1d9d263a787f8021$export$a3febcf1f14a3a0c","productName","host","$1d9d263a787f8021$export$9c11895284c8adad","separatorIndex","lastIndexOf","port","parseInt","substring","$1d9d263a787f8021$export$3dfb6827a9f89756","$1d9d263a787f8021$export$5539a1a3afe87d6","$1d9d263a787f8021$export$85f6557964517f1a","$1d9d263a787f8021$export$367bf224123348f1","token","projectId","uid","iat","sub","user_id","project","auth_time","firebase","sign_in_provider","identities","$1d9d263a787f8021$export$4b5284a3025a455","JSON","stringify","alg","payload","navigator","$1d9d263a787f8021$export$872f8323f01d7ae0","$1d9d263a787f8021$export$c36915b22ce77c19","$1d9d263a787f8021$export$caa8774a9107a58e","runtime","chrome","browser","id","$1d9d263a787f8021$export$7e7b1a9668aaed8","indexedDB","DB_CHECK_NAME","open","close","deleteDatabase","request","Error1","$2MbLg","code","customData","captureStackTrace","$1d9d263a787f8021$export$3fa6e1b18a3b2d40","serviceName","errors","data","fullCode","template","$1d9d263a787f8021$var$replaceTemplate","$1d9d263a787f8021$export$9cb4719e2e525b7a","a","b","aKeys","bKeys","k","includes","aProp","bProp","$1d9d263a787f8021$var$isObject","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","k1","thing","$1d9d263a787f8021$export$ac4103b836844853","querystringParams","params","_step2","_loop","arrayVal","encodeURIComponent","ReferenceError","subClass","superClass","$ae7f60fd48750bb9$var$_setPrototypeOf","$c1b1a34fae3d3c27$var$setPrototypeOf","o1","p1","Class","$30de785adf49c647$var$wrapNativeSuper","$30de785adf49c647$var$_construct","$30de785adf49c647$var$_interopRequireDefault","$30de785adf49c647$var$_isNativeFunction","$30de785adf49c647$var$_getPrototypeOf","$30de785adf49c647$var$_setPrototypeOf","Class1","_cache","Wrapper","Parent","$bd045042b29ce6c9$var$construct","$bd045042b29ce6c9$var$_setPrototypeOf","$bd045042b29ce6c9$var$isNativeReflectConstruct","Reflect","construct","sham","Proxy","Parent1","args1","bind","indexOf","$b9926a5835d271e3$var$getPrototypeOf","Derived","hasNativeReflectConstruct","$2059300b4b5a348b$var$_isNativeReflectConstruct","Super","$2059300b4b5a348b$var$_getPrototypeOf","NewTarget","$2059300b4b5a348b$var$_possibleConstructorReturn","$2059300b4b5a348b$var$_interopRequireDefault","Boolean","$e17dad4ea3dafe1a$var$_typeOf","$e17dad4ea3dafe1a$var$_assertThisInitialized","$e17dad4ea3dafe1a$var$_interopRequireDefault","$4acf49f6c3e67aec$var$cachedSetTimeout","$4acf49f6c3e67aec$var$cachedClearTimeout","$4acf49f6c3e67aec$var$process","$4acf49f6c3e67aec$var$defaultSetTimout","$4acf49f6c3e67aec$var$defaultClearTimeout","$4acf49f6c3e67aec$var$runTimeout","fun","setTimeout","clearTimeout","e1","$4acf49f6c3e67aec$var$currentQueue","$4acf49f6c3e67aec$var$queue","$4acf49f6c3e67aec$var$draining","$4acf49f6c3e67aec$var$queueIndex","$4acf49f6c3e67aec$var$cleanUpNextTick","$4acf49f6c3e67aec$var$drainQueue","timeout","run","marker","$4acf49f6c3e67aec$var$runClearTimeout","$4acf49f6c3e67aec$var$Item","array","$4acf49f6c3e67aec$var$noop","nextTick","title","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","$f4758df7279d6c6a$export$243e62d78d3b544d","LogLevel1","$f4758df7279d6c6a$var$instances","DEBUG","VERBOSE","INFO","WARN","ERROR","logType","_len","_key","logLevel","toISOString","$f4758df7279d6c6a$var$ConsoleMethod","_console","now","_logLevel","$f4758df7279d6c6a$var$defaultLogLevel","$f4758df7279d6c6a$var$defaultLogHandler","_userLogHandler","$f4758df7279d6c6a$var$levelStringToEnum","_logHandler","$7818c326be87ea84$export$ca0ed41b1a2af7e","blocked","upgrade","blocking","terminated","openPromise","$kKOTz","w","addEventListener","event","newVersion","$7818c326be87ea84$var$readMethods","$7818c326be87ea84$var$writeMethods","$7818c326be87ea84$var$cachedMethods","$7818c326be87ea84$var$getMethod","prop","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","storeName","_target","tx","_$target","_args","store","index","shift","all","r","oldTraps","$dDDEV","receiver","source","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","$9eddae5a012cde57$var$_defineProperty","$f1bf9542bc9ee5ed$var$idbProxyableTypes","$f1bf9542bc9ee5ed$var$cursorAdvanceMethods","$f1bf9542bc9ee5ed$var$cursorRequestMap","WeakMap","$f1bf9542bc9ee5ed$var$transactionDoneMap","$f1bf9542bc9ee5ed$var$transactionStoreNamesMap","$f1bf9542bc9ee5ed$var$transformCache","$f1bf9542bc9ee5ed$export$407448d2b89b1813","$f1bf9542bc9ee5ed$var$idbProxyTraps","IDBTransaction","objectStoreNames","$f1bf9542bc9ee5ed$export$efccba1c4a2ef57b","$f1bf9542bc9ee5ed$export$43caf9889c228507","$f1bf9542bc9ee5ed$var$wrapFunction","func","IDBCursor","advance","continue","continuePrimaryKey","$f1bf9542bc9ee5ed$export$3b14a55fb2447963","storeNames","_func","sort","$f1bf9542bc9ee5ed$var$transformCachableValue","unlisten","removeEventListener","DOMException","$f1bf9542bc9ee5ed$var$cacheDonePromiseForTransaction","some","IDBRequest","success","newValue","$c81c85f5b6b618be$var$d","d","t","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","$c81c85f5b6b618be$var$w","$c81c85f5b6b618be$var$m","$c81c85f5b6b618be$var$y","_m","$c81c85f5b6b618be$var$v","$c81c85f5b6b618be$var$g","$c81c85f5b6b618be$var$_","$c81c85f5b6b618be$var$b","$c81c85f5b6b618be$var$E","$c81c85f5b6b618be$var$A","$c81c85f5b6b618be$var$T","$c81c85f5b6b618be$var$R","$c81c85f5b6b618be$var$P","$c81c85f5b6b618be$var$V","$c81c85f5b6b618be$var$$","$c81c85f5b6b618be$var$N","$c81c85f5b6b618be$var$F","$c81c85f5b6b618be$var$x","$c81c85f5b6b618be$var$S","$c81c85f5b6b618be$var$q","$c81c85f5b6b618be$var$O","$c81c85f5b6b618be$var$k","$c81c85f5b6b618be$var$C","$c81c85f5b6b618be$var$L","$c81c85f5b6b618be$export$8fada0bf726bf278","FirebaseError1","U","$c81c85f5b6b618be$var$B","B","user","headers","$c81c85f5b6b618be$var$z","z","enqueueRetryable","$c81c85f5b6b618be$var$Q","Q","changeListener","$c81c85f5b6b618be$var$W","W","t1","auth","onInit","getToken","accessToken","getUid","$c81c85f5b6b618be$var$G","G","h","getAuthHeaderValueForFirstParty","l","$c81c85f5b6b618be$var$K","K","$c81c85f5b6b618be$var$Y","Y","$c81c85f5b6b618be$var$H","H","t2","m","appCheck","$c81c85f5b6b618be$var$Z","Z","s","databaseId","appId","persistenceKey","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","$c81c85f5b6b618be$var$J","J","database","$c81c85f5b6b618be$var$X","X","segments","offset","comparator","t3","limit","Math","min","n1","$c81c85f5b6b618be$var$tt","tt","toArray","canonicalString","t4","_e1","split","$c81c85f5b6b618be$var$et","$c81c85f5b6b618be$var$nt","nt","isValidIdentifier","e2","e3","$c81c85f5b6b618be$var$rt","rt","path","popLast","lastSegment","fromString","popFirst","emptyPath","$c81c85f5b6b618be$var$st","$c81c85f5b6b618be$var$it","isDocumentKey","$c81c85f5b6b618be$var$ot","$c81c85f5b6b618be$var$ut","t5","$c81c85f5b6b618be$var$ct","_delegate","$c81c85f5b6b618be$var$ht","$c81c85f5b6b618be$var$lt","$c81c85f5b6b618be$var$dt","$c81c85f5b6b618be$var$wt","$c81c85f5b6b618be$var$ft","BatchGetDocuments","Commit","RunQuery","RunAggregationQuery","$c81c85f5b6b618be$var$mt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","UNAVAILABLE","DATA_LOSS","$c81c85f5b6b618be$var$pt","_superClass","pt","V","t6","e5","e4","body","status","statusText","ok","json","databaseInfo","g","t7","e6","I","T","R","A","e7","n2","$c81c85f5b6b618be$var$vt","crypto","msCrypto","Uint8Array","getRandomValues","e8","floor","random","$c81c85f5b6b618be$var$bt","bt","$c81c85f5b6b618be$var$Et","$c81c85f5b6b618be$var$At","t8","every","$c81c85f5b6b618be$var$It","$c81c85f5b6b618be$var$Tt","$c81c85f5b6b618be$var$Rt","Rt","$c81c85f5b6b618be$var$_iterator","$c81c85f5b6b618be$var$Pt","Pt","binaryString","t9","t10","t11","EMPTY_BYTE_STRING","$c81c85f5b6b618be$var$Vt","RegExp","$c81c85f5b6b618be$var$$t","exec","_$t","substr","Number","seconds","getTime","nanos","$c81c85f5b6b618be$var$Dt","$c81c85f5b6b618be$var$Nt","fromBase64String","fromUint8Array","$c81c85f5b6b618be$export$d9bcbd5e1ff81430","Ft","nanoseconds","toMillis","padStart","fromMillis","$c81c85f5b6b618be$var$xt","mapValue","fields","__type__","stringValue","$c81c85f5b6b618be$var$St","__previous_value__","$c81c85f5b6b618be$var$qt","__local_write_time__","timestampValue","$c81c85f5b6b618be$var$Ot","$c81c85f5b6b618be$var$kt","t12","$c81c85f5b6b618be$var$Ct","t13","e10","n3","booleanValue","isEqual","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","arrayValue","$c81c85f5b6b618be$var$Lt","t14","find","$c81c85f5b6b618be$var$Mt","t15","e11","n4","r1","$c81c85f5b6b618be$var$Ut","compareTo","_$e","$c81c85f5b6b618be$var$jt","$c81c85f5b6b618be$var$Bt","$c81c85f5b6b618be$var$zt","$c81c85f5b6b618be$var$Qt","$c81c85f5b6b618be$var$Wt","$c81c85f5b6b618be$var$Gt","t16","assign","e12","n5","$c81c85f5b6b618be$var$Kt","Kt","position","inclusive","$c81c85f5b6b618be$var$Ht","Ht","$c81c85f5b6b618be$var$Zt","Zt","field","op","matchesComparison","isInequality","isKeyField","createKeyFieldInFilter","$c81c85f5b6b618be$var$te","$c81c85f5b6b618be$var$se","$c81c85f5b6b618be$var$ie","$c81c85f5b6b618be$var$oe","$c81c85f5b6b618be$var$ue","$c81c85f5b6b618be$var$ee","$c81c85f5b6b618be$var$ne","$c81c85f5b6b618be$var$Jt","Jt","filters","S","matches","reduce","getFlattenedFilters","t17","q","_iterator2","te","fromName","ee","$c81c85f5b6b618be$var$re","ne","t20","se","ie","oe","nullValue","ue","t21","$c81c85f5b6b618be$var$ce","ce","$c81c85f5b6b618be$var$he","he","timestamp","_compareTo","$c81c85f5b6b618be$var$le","le","root","$c81c85f5b6b618be$var$de","EMPTY","insert","copy","BLACK","remove","isEmpty","left","right","size","minKey","maxKey","inorderTraversal","reverseTraversal","$c81c85f5b6b618be$var$fe","fe","isReverse","nodeStack","de","color","RED","fixUp","isRed","moveRedLeft","removeMin","rotateRight","moveRedRight","rotateLeft","colorFlip","check","pow","$c81c85f5b6b618be$var$we","we","getIteratorFrom","hasNext","getNext","getIterator","$c81c85f5b6b618be$var$me","t22","me","$c81c85f5b6b618be$var$pe","pe","_iterator4","_iterator3","_iterator5","isPrefixOf","t23","$c81c85f5b6b618be$var$ye","ye","getFieldsMap","t24","isImmediateParentOf","applyChanges","s1","e14","n6","_iterator6","$c81c85f5b6b618be$var$ge","ge","documentType","readTime","createTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","$c81c85f5b6b618be$var$_e","_e","collectionGroup","orderBy","startAt","endAt","O","$c81c85f5b6b618be$var$ve","$c81c85f5b6b618be$var$be","be","explicitOrderBy","limitType","C","$c81c85f5b6b618be$var$Ee","$c81c85f5b6b618be$var$Ae","_iterator7","getFirstInequalityField","$c81c85f5b6b618be$var$Ie","$c81c85f5b6b618be$var$Te","keyField","_$t1","_iterator8","n7","_$t2","$c81c85f5b6b618be$var$Re","_iterator9","e15","n8","$c81c85f5b6b618be$var$Pe","$c81c85f5b6b618be$var$$e","t26","e17","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","L","$c81c85f5b6b618be$var$De","De","_","$c81c85f5b6b618be$var$Ne","Ne","$c81c85f5b6b618be$var$Fe","Fe","elements","$c81c85f5b6b618be$var$xe","xe","$c81c85f5b6b618be$var$Se","Se","M","$c81c85f5b6b618be$var$Oe","Oe","updateTime","exists","$c81c85f5b6b618be$var$ke","ke","$c81c85f5b6b618be$var$Ce","Ce","precondition","fieldTransforms","$c81c85f5b6b618be$var$Le","Le","fieldMask","$c81c85f5b6b618be$var$Me","Me","$c81c85f5b6b618be$var$Ue","Ue","$c81c85f5b6b618be$var$je","asc","desc","$c81c85f5b6b618be$var$Be","in","$c81c85f5b6b618be$var$ze","and","or","$c81c85f5b6b618be$var$Qe","Qe","$c81c85f5b6b618be$var$We","$c81c85f5b6b618be$var$Ge","toBase64","toUint8Array","$c81c85f5b6b618be$var$Ke","toTimestamp","$c81c85f5b6b618be$var$Ye","t27","fromTimestamp","$c81c85f5b6b618be$var$He","t28","child","$c81c85f5b6b618be$var$Ze","$c81c85f5b6b618be$var$Je","t29","$c81c85f5b6b618be$var$fn","$c81c85f5b6b618be$var$Xe","$c81c85f5b6b618be$var$tn","$c81c85f5b6b618be$var$en","$c81c85f5b6b618be$var$rn","t31","e19","n10","t37","update","updateMask","fieldPaths","verify","updateTransforms","transform","fieldPath","setToServerValue","appendMissingElements","removeAllFromArray","increment","isNone","currentDocument","$c81c85f5b6b618be$var$sn","t32","e20","structuredQuery","parent","collectionId","allDescendants","$c81c85f5b6b618be$var$hn","where","t33","t34","$c81c85f5b6b618be$var$an","direction","$c81c85f5b6b618be$var$on","before","$c81c85f5b6b618be$var$un","t35","unaryFilter","fieldFilter","t36","getFilters","compositeFilter","$c81c85f5b6b618be$var$dn","$c81c85f5b6b618be$var$mn","_class","mn","authCredentials","appCheckCredentials","connection","et","t38","param","_param","invalidateToken","t39","P","$c81c85f5b6b618be$var$pn","t40","$c81c85f5b6b618be$var$_pn","writes","$c81c85f5b6b618be$var$_gn","t42","e21","n11","r2","t43","newFoundDocument","$c81c85f5b6b618be$var$vn","$c81c85f5b6b618be$var$bn","t46","_terminated","e23","_databaseId","n13","r4","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","fetch","_authCredentials","_appCheckCredentials","$c81c85f5b6b618be$var$En","En","t47","e24","credentials","ignoreUndefinedProperties","cacheSizeBytes","$c81c85f5b6b618be$export$d0e2b3272814ce82","An","_app","_settings","_settingsFrozen","_terminateTask","t48","client","sessionIndex","iamToken","authTokenFactory","_terminate","settings","terminate","$c81c85f5b6b618be$export$f06a05d14c3a6678","$MjY8E","_getProvider","_initialized","$c81c85f5b6b618be$export$966a03d25297d115","_getSettings","_setSettings","mockUserToken","_$n","i1","$c81c85f5b6b618be$export$6be62b059fb12175","Dn","converter","firestore","$c81c85f5b6b618be$export$ab5a1a47940a200e","$c81c85f5b6b618be$export$62297b13309008b2","Nn","_query","Fn","_path","$c81c85f5b6b618be$export$bf5175b0c24981cd","_tt","_tt1","r5","$c81c85f5b6b618be$export$2a111da947c407d2","F","_tt2","r6","$c81c85f5b6b618be$export$9f55f2e2bf8c2fc1","Cn","_byteString","t50","$c81c85f5b6b618be$export$a1a8fea822d17659","Ln","_internalPath","$c81c85f5b6b618be$export$c58bc8ee7ecc248d","Un","_methodName","$c81c85f5b6b618be$export$f9f719d1b6419c4","jn","isFinite","_lat","_long","$c81c85f5b6b618be$var$Bn","$c81c85f5b6b618be$var$zn","zn","$c81c85f5b6b618be$var$Qn","Qn","$c81c85f5b6b618be$var$Wn","$c81c85f5b6b618be$var$Gn","Gn","st","it","ut","ct","$c81c85f5b6b618be$var$dr","methodName","ft","dt","lt","$c81c85f5b6b618be$var$Kn","Kn","$c81c85f5b6b618be$var$Yn","$c81c85f5b6b618be$var$Hn","t51","wt","merge","mergeFields","$c81c85f5b6b618be$var$ar","$c81c85f5b6b618be$var$ur","_iterator10","_$r","_$s","$c81c85f5b6b618be$var$hr","contains","$c81c85f5b6b618be$var$wr","covers","$c81c85f5b6b618be$var$Zn","Zn","$c81c85f5b6b618be$var$rr","t54","r7","$c81c85f5b6b618be$var$fr","at","$c81c85f5b6b618be$var$or","u1","$c81c85f5b6b618be$var$sr","_$t3","_$t4","f","$c81c85f5b6b618be$var$ir","t55","e25","$c81c85f5b6b618be$var$cr","_toFieldTransform","_iterator11","ht","fromDate","n14","n15","t56","ot","t57","$c81c85f5b6b618be$var$lr","search","$ge8co","t58","$c81c85f5b6b618be$export$acab0e6ef25eb301","mr","_firestore","_userDataWriter","_document","_converter","$c81c85f5b6b618be$export$6d4d04e42af6b03c","fromFirestore","convertValue","$c81c85f5b6b618be$var$_r","pr","$jh8P3","$fVNic","$c81c85f5b6b618be$export$8f21149d8133945c","yr","_docs","query","docs","$c81c85f5b6b618be$var$vr","vr","$c81c85f5b6b618be$export$b0e86f2c7431df4e","br","$c81c85f5b6b618be$export$2fa187e846a241c4","t59","n16","t60","$c81c85f5b6b618be$export$6bbc7aef0717f3d2","$c81c85f5b6b618be$export$f765fc5789dfd439","_iterator12","_$e1","_apply","Ar","_field","_op","_parse","$c81c85f5b6b618be$var$jr","t61","e26","$c81c85f5b6b618be$var$Ur","_iterator13","$c81c85f5b6b618be$var$Mr","$c81c85f5b6b618be$export$9c59b80dda569a6e","_create","Tr","_queryConstraints","t62","e27","_getOperator","t63","e28","_iterator14","t72","e34","$c81c85f5b6b618be$var$Br","n19","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator17","_iterator16","$c81c85f5b6b618be$var$Qr","toFirestore","$c81c85f5b6b618be$var$Wr","Wr","convertDocumentKey","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","t73","t74","$c81c85f5b6b618be$export$81d3477bd73c86ef","t75","e36","$c81c85f5b6b618be$var$gn","e37","$c81c85f5b6b618be$export$22d1fdd1e73faff2","toMutation","$c81c85f5b6b618be$export$a13890143fb1c2dd","t90","e44","setMultipleInstances","property","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","target1","property1","receiver1","base","$1b88cb4cd4b28de3$var$_getPrototypeOf"],"version":3,"file":"terms-of-service.a20228db.js.map"}